{"version":3,"file":"static/js/920.f2de48c5.js","mappings":"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","sources":["webpack://mindmap/./src/views/AnswerCar.vue?355f","webpack://mindmap/src/views/AnswerCar.vue","webpack://mindmap/./src/views/AnswerCar.vue?28bf","webpack://mindmap/./src/views/AnswerCar.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"title\"},[_vm._v(\" python第\"+_vm._s(_vm.ChapterID)+\"章：\"+_vm._s(_vm.TestName)+\" \")]),_c('el-form',{staticClass:\"main\"},[_c('P',{staticClass:\"headline\"},[_vm._v(\"客观题\"),(_vm.isSubmit)?_c('span',{staticClass:\"score\"},[_vm._v(\"你的得分：\"+_vm._s(_vm.score))]):_vm._e()]),_vm._l((_vm.optQuesList),function(t,i){return _c('el-form-item',{attrs:{\"size\":\"medium\"}},[_c('P',{staticClass:\"quesTitle\",class:{ 'wrongAns': _vm.checkResult.optQuesRes[i] === false }},[_c('span',{staticClass:\"quesNum\"},[_vm._v(_vm._s(t.number))]),_vm._v(_vm._s(t.title)+\" \"),(_vm.checkResult.optQuesRes[i] === false)?_c('i',{staticClass:\"el-icon-close\"}):_vm._e()]),_c('el-radio-group',{on:{\"change\":_vm.test},model:{value:(_vm.optAns[i]),callback:function ($$v) {_vm.$set(_vm.optAns, i, $$v)},expression:\"optAns[i]\"}},_vm._l((t.options),function(e,j){return _c('div',[_c('el-radio',{attrs:{\"label\":_vm.getAlpha(j),\"size\":\"medium\"}},[_c('span',[_vm._v(_vm._s(_vm.getAlpha(j))+\".\")]),_c('span',{staticClass:\"option\"},[_vm._v(_vm._s(e))])])],1)}),0),(_vm.isSubmit)?_c('div',{staticClass:\"correctAnswer\"},[_vm._v(\"正确答案：\"+_vm._s(_vm.correctAnswers[i]))]):_vm._e()],1)}),_vm._l((_vm.multiOptQuestList),function(t,i){return _c('el-form-item',{attrs:{\"size\":\"medium\"}},[_c('P',{staticClass:\"quesTitle\",class:{ 'wrongAns': _vm.checkResult.multiOptQuesRes[i] === false }},[_c('span',{staticClass:\"quesNum\"},[_vm._v(_vm._s(t.number))]),_vm._v(_vm._s(t.title)+\" \"),(_vm.checkResult.multiOptQuesRes[i] === false)?_c('i',{staticClass:\"el-icon-close\"}):_vm._e()]),_c('el-checkbox-group',{attrs:{\"size\":\"medium\"},model:{value:(_vm.multiAns[i]),callback:function ($$v) {_vm.$set(_vm.multiAns, i, $$v)},expression:\"multiAns[i]\"}},_vm._l((t.options),function(e,j){return _c('div',[_c('el-checkbox',{attrs:{\"label\":_vm.getAlpha(j),\"size\":\"medium\"}},[_c('span',[_vm._v(_vm._s(_vm.getAlpha(j))+\".\")]),_c('span',{staticClass:\"option\"},[_vm._v(_vm._s(e))])])],1)}),0),(_vm.isSubmit)?_c('div',{staticClass:\"correctAnswer\"},[_vm._v(\"正确答案：\"+_vm._s(_vm.correctAnswers[i]))]):_vm._e()],1)}),_vm._l((_vm.TFQuestionList),function(t,i){return _c('el-form-item',{attrs:{\"size\":\"medium\"}},[_c('P',{staticClass:\"quesTitle\",class:{ 'wrongAns': _vm.checkResult.TFQuesRes[i] === false }},[_c('span',{staticClass:\"quesNum\"},[_vm._v(_vm._s(t.number))]),_vm._v(_vm._s(t.title)+\" \"),(_vm.checkResult.TFQuesRes[i] === false)?_c('i',{staticClass:\"el-icon-close\"}):_vm._e()]),_c('el-radio-group',{model:{value:(_vm.TFAns[i]),callback:function ($$v) {_vm.$set(_vm.TFAns, i, $$v)},expression:\"TFAns[i]\"}},[_c('div',[_c('el-radio',{attrs:{\"label\":\"1\",\"size\":\"medium\"}},[_c('i',{staticClass:\"el-icon-check TFOpt\"})])],1),_c('div',[_c('el-radio',{attrs:{\"label\":\"0\",\"size\":\"medium\"}},[_c('i',{staticClass:\"el-icon-close TFOpt\"})])],1)]),(_vm.isSubmit)?_c('div',{staticClass:\"correctAnswer\"},[_vm._v(\"正确答案：\"+_vm._s(_vm.correctAnswers[i]))]):_vm._e()],1)}),_vm._l((_vm.blankQuesList),function(t,i){return _c('el-form-item',[_c('P',{staticClass:\"quesTitle\",class:{ 'wrongAns': _vm.checkResult.blanQuesRes[i] === false }},[_c('span',{staticClass:\"quesNum\"},[_vm._v(_vm._s(t.number))]),_vm._v(_vm._s(t.title)+\" \"),(_vm.checkResult.blanQuesRes[i] === false)?_c('i',{staticClass:\"el-icon-close\"}):_vm._e()]),_c('el-input',{staticStyle:{\"width\":\"50%\"},attrs:{\"size\":\"medium\",\"clearable\":\"\"},model:{value:(_vm.blanAns[i]),callback:function ($$v) {_vm.$set(_vm.blanAns, i, $$v)},expression:\"blanAns[i]\"}}),(_vm.isSubmit)?_c('div',{staticClass:\"correctAnswer\"},[_vm._v(\"正确答案：\"+_vm._s(_vm.correctAnswers[i]))]):_vm._e()],1)}),_c('el-button',{staticClass:\"subBtn\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.clickSubmit}},[_vm._v(\"提交答案\")]),_c('el-divider'),_c('P',{staticClass:\"headline\"},[_vm._v(\"编程题\"),_c('span',{staticStyle:{\"font-size\":\"0.8em\",\"font-weight\":\"normal\"}},[_vm._v(\"（将代码文件上传即可）\")])]),_vm._l((_vm.programQuestList),function(t,i){return _c('el-form-item',[_c('P',{staticClass:\"quesTitle\"},[_c('span',{staticClass:\"quesNum\"},[_vm._v(_vm._s(t.number))]),_vm._v(_vm._s(t.title))]),_c('el-upload',{staticClass:\"upload-demo\",attrs:{\"drag\":\"\",\"limit\":1,\"file-list\":_vm.codefileList[i],\"show-file-list\":\"\",\"auto-upload\":false,\"on-error\":_vm.uploadError,\"on-success\":_vm.uploadSuccess,\"action\":\"#\",\"on-change\":function (file, fileList){return _vm.handleChange(file, fileList, i)},\"on-remove\":function (file, fileList){return _vm.fileRemove(file, fileList, i)}}},[_c('i',{staticClass:\"el-icon-upload\"}),_c('div',{staticClass:\"el-upload__text\"},[_vm._v(\"将文件拖到此处，或\"),_c('em',[_vm._v(\"点击上传\")])])]),_c('el-button',{staticClass:\"subBtn\",attrs:{\"type\":\"primary\"},on:{\"click\":function (){return _vm.upload(i)}}},[_vm._v(\"上传\")])],1)})],2),_c('el-dialog',{attrs:{\"title\":\"提示\",\"visible\":_vm.dialogVisible,\"width\":\"20%\",\"top\":\"35vh\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('span',[_vm._v(\"确定要提交答案？\")]),(!_vm.isFinished)?_c('div',{staticClass:\"unFinishWarn\"},[_c('i',{staticClass:\"el-icon-warning\"}),_vm._v(\"还有题目未完成\")]):_vm._e(),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{staticClass:\"btn\",on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{staticClass:\"btn\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.submit}},[_vm._v(\"确 定\")])],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div class=\"title\">\n            python第{{ ChapterID }}章：{{ TestName }}\n        </div>\n        <el-form class=\"main\">\n            <P class=\"headline\">客观题<span class=\"score\" v-if=\"isSubmit\">你的得分：{{ score }}</span></P>\n            <!--单选题-->\n            <el-form-item v-for=\"(t,i) in optQuesList\" size=\"medium\">\n                <P class=\"quesTitle\" :class=\"{ 'wrongAns': checkResult.optQuesRes[i] === false }\">\n                    <span class=\"quesNum\">{{ t.number }}</span>{{ t.title }} <i v-if=\"checkResult.optQuesRes[i] === false\" class=\"el-icon-close\"></i>\n                </P>\n                <el-radio-group v-model=\"optAns[i]\" @change=\"test\">\n                    <div v-for=\"(e,j) in t.options\">\n                        <el-radio :label=\"getAlpha(j)\" size=\"medium\">\n                            <span>{{ getAlpha(j) }}.</span>\n                            <span class=\"option\">{{ e }}</span>\n                        </el-radio>\n                    </div>\n                </el-radio-group>\n                <div v-if=\"isSubmit\" class=\"correctAnswer\">正确答案：{{ correctAnswers[i] }}</div>\n            </el-form-item>\n\n            <!--多选题-->\n            <el-form-item v-for=\"(t,i) in multiOptQuestList\" size=\"medium\">\n                <P class=\"quesTitle\" :class=\"{ 'wrongAns': checkResult.multiOptQuesRes[i] === false }\">\n                    <span class=\"quesNum\">{{ t.number }}</span>{{ t.title }} <i v-if=\"checkResult.multiOptQuesRes[i] === false\" class=\"el-icon-close\"></i>\n                </P>\n                <el-checkbox-group v-model=\"multiAns[i]\" size=\"medium\">\n                    <div v-for=\"(e,j) in t.options\">\n                        <el-checkbox :label=\"getAlpha(j)\" size=\"medium\">\n                            <span>{{ getAlpha(j) }}.</span>\n                            <span class=\"option\">{{ e }}</span>\n                        </el-checkbox>\n                    </div>\n                </el-checkbox-group>\n                <div v-if=\"isSubmit\" class=\"correctAnswer\">正确答案：{{ correctAnswers[i] }}</div>\n            </el-form-item>\n\n            <!--判断题-->\n            <el-form-item v-for=\"(t,i) in TFQuestionList\" size=\"medium\">\n                <P class=\"quesTitle\" :class=\"{ 'wrongAns': checkResult.TFQuesRes[i] === false }\">\n                    <span class=\"quesNum\">{{ t.number }}</span>{{ t.title }} <i v-if=\"checkResult.TFQuesRes[i] === false\" class=\"el-icon-close\"></i>\n                </P>\n                <el-radio-group v-model=\"TFAns[i]\">\n                    <div>\n                        <el-radio label=\"1\" size=\"medium\"><i class=\"el-icon-check TFOpt\"></i></el-radio>\n                    </div>\n                    <div>\n                        <el-radio label=\"0\" size=\"medium\"><i class=\"el-icon-close TFOpt\"></i></el-radio>\n                    </div>\n                </el-radio-group>\n                <div v-if=\"isSubmit\" class=\"correctAnswer\">正确答案：{{ correctAnswers[i] }}</div>\n            </el-form-item>\n\n            <!--填空题-->\n            <el-form-item v-for=\"(t,i) in blankQuesList\">\n                <P class=\"quesTitle\" :class=\"{ 'wrongAns': checkResult.blanQuesRes[i] === false }\">\n                    <span class=\"quesNum\">{{ t.number }}</span>{{ t.title }} <i v-if=\"checkResult.blanQuesRes[i] === false\" class=\"el-icon-close\"></i>\n                </P>\n                <el-input size=\"medium\" v-model=\"blanAns[i]\" clearable style=\"width: 50%\"></el-input>\n                <div v-if=\"isSubmit\" class=\"correctAnswer\">正确答案：{{ correctAnswers[i] }}</div>\n            </el-form-item>\n\n            <el-button type=\"primary\" class=\"subBtn\" @click=\"clickSubmit\">提交答案</el-button>\n\n            <el-divider/>\n            <!--编程题-->\n            <P class=\"headline\">编程题<span style=\"font-size: 0.8em; font-weight: normal\">（将代码文件上传即可）</span></P>\n            <el-form-item v-for=\"(t,i) in programQuestList\">\n                <P class=\"quesTitle\"><span class=\"quesNum\">{{ t.number }}</span>{{ t.title }}</P>\n                <el-upload class=\"upload-demo\" drag :limit=\"1\" :file-list=\"codefileList[i]\" show-file-list :auto-upload=\"false\"\n                           :on-error=\"uploadError\" :on-success=\"uploadSuccess\" action=\"#\"\n                           :on-change=\"(file, fileList)=>{return handleChange(file, fileList, i)}\" :on-remove=\"(file, fileList)=>{return fileRemove(file, fileList, i)}\">\n                    <i class=\"el-icon-upload\"></i>\n                    <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n                    <!--<div class=\"el-upload__tip\" slot=\"tip\">只能上传jpg/png文件，且不超过500kb</div>-->\n                </el-upload>\n                <el-button type=\"primary\" @click=\"()=>{return upload(i)}\" class=\"subBtn\">上传</el-button>\n            </el-form-item>\n        </el-form>\n\n        <el-dialog title=\"提示\" :visible.sync=\"dialogVisible\" width=\"20%\" top=\"35vh\">\n            <span>确定要提交答案？</span>\n            <div v-if=\"!isFinished\" class=\"unFinishWarn\"><i class=\"el-icon-warning\"></i>还有题目未完成</div>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogVisible = false\" class=\"btn\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"submit\" class=\"btn\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n    name: \"AnswerCar\",\n    data() {\n        return {\n            ChapterID: 1,\n            TestID: 1,\n            TestName: '',\n            UserID: '',\n            chapterName: '',\n            isSubmit: false,\n            // 单选题数组\n            optQuesList: [\n                {\n                    number: 1,\n                    title: '某建设工程施工招标，甲公司中标后将其转包给不具有相应资质等级的乙公司，乙施工过程不符合规定的质量标准，给建设单位造成损失。关于向建设单位承担赔偿责任的说法，正确的是（ ）。',\n                    options:\n                        ['甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任',\n                            '建设单位与甲有合同关系，应由乙承担赔偿责任甲、乙承担连带赔偿责任v',\n                            '乙为实际施工人，应由乙承担赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任',\n                        ]\n                }\n            ],\n            optQuestion: {\n                number: 0,\n                title: '',\n                options: []\n            },\n            // 多选题数组\n            multiOptQuestList: [\n                {\n                    number: 1,\n                    title: '某建设工程施工招标，甲公司中标后将其转包给不具有相应资质等级的乙公司，乙施工过程不符合规定的质量标准，给建设单位造成损失。关于向建设单位承担赔偿责任的说法，正确的是（ ）。',\n                    options:\n                        ['甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任',\n                            '建设单位与甲有合同关系，应由乙承担赔偿责任甲、乙承担连带赔偿责任v',\n                            '乙为实际施工人，应由乙承担赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任甲、乙承担连带赔偿责任',\n                        ]\n                }\n            ],\n            // 判断题数组\n            TFQuestionList: [\n                {\n                    title: 'The integrated development tool built into Python is',\n                    number: 1\n                }\n            ],\n            // 填空题数组\n            blankQuesList: [\n                {\n                    title: '企业事业单位和其他生产经营者，为改善环境，依照有关规定转产、搬迁、关闭的，人民政府应当子以支持。',\n                    number: 0\n                },\n                {\n                    title: '人民代表大会制度是我国的根本制度。',\n                    number: 1\n                },\n                {\n                    title: '一切法律、行政法规和地方性法规都不得同宪法相抵触。',\n                    number: 2\n                },\n                {\n                    title: '我国最高国家权力机关的常设机关是全国人民代表大会常务委员会。',\n                    number: 3\n                },\n            ],\n            blankQuestion: {\n                title: '',\n                number: 0\n            },\n            // 编程题数组\n            programQuestList: [\n                {\n                    number: 1,\n                    title: 'The integrated development tool built into Python is'\n                },\n                {\n                    number: 2,\n                    title: 'The integrated development tool built into Python is'\n                }\n            ],\n            // 客观题校对结果\n            checkResult: {\n                optQuesRes: [],\n                multiOptQuesRes: [],\n                TFQuesRes: [],\n                blanQuesRes: []\n            },\n            correctAnswers: ['AB'],\n            // 四种类型题目的答案\n            optAns: [],\n            multiAns: [[]],\n            TFAns: [],\n            blanAns: [],\n            // 与后端交互所用的答案\n            UserAnswers: [],\n            dialogVisible: false,\n            // 是否已经完成答题\n            isFinished: false,\n            score: '',\n            // 代码文件数组\n            codefileList: [],\n        }\n    },\n    created() {\n        // 获取用户信息\n        console.log('answercard');\n        this.UserID = this.$store.state.userInfo.userID;\n        this.ChapterID = Number(this.$route.query.ChapterID) + 1;\n        this.TestName = this.$route.query.TestName;\n        //  获取题目\n        let url = `/user/getquestions?ChapterID=${this.ChapterID}&TestID=${this.TestID}`;\n        request.get(url).then(res => {\n            if (res.status === 200) {\n                // this.UserAnswers = Array(res.data.questions.length).fill('');\n                // 判断是否已经回答过题目\n                this.isSubmit = (res.data.data.hasDoneTest === true);\n                // 初始化答案数组\n                this.optAns = [];\n                this.multiAns = [];\n                this.TFAns = [];\n                this.blanAns = [];\n\n                for (let e of res.data.data.questions) {\n                    this.optQuestion.number = e.QuestionNumber;\n                    let array = e.Description.split('@');\n                    switch (e.QuestionType) {\n                        // 单选题\n                        case 0: {\n                            this.optQuestion.title = array[0];\n                            this.optQuestion.options = array.slice(1);\n                            this.optQuesList.push(this.optQuestion);\n                            this.optAns.push('');\n                            break;\n                        }\n                        // 多选题\n                        case 1: {\n                            this.optQuestion.title = array[0];\n                            this.optQuestion.options = array.slice(1);\n                            this.multiOptQuestList.push(this.optQuestion);\n                            this.multiAns.push([]);\n                            break;\n                        }\n                        // 判断题\n                        case 2: {\n                            this.blankQuestion.title = array[0];\n                            this.TFQuestionList.push(this.blankQuestion);\n                            this.TFAns.push('');\n                            break;\n                        }\n                        // 填空题\n                        case 3: {\n                            this.blankQuestion.title = array[0];\n                            this.blankQuesList.push(this.blankQuestion);\n                            this.blanAns.push('');\n                            break;\n                        }\n                        // 编程题\n                        case  4: {\n                            this.blankQuestion.title = array[0];\n                            this.blankQuesList.push(this.blankQuestion);\n                            this.codefileList.push([]);\n                        }\n                    }\n                }\n            }\n        }).catch(error => {\n            console.log(error);\n            this.$message({\n                type: \"error\",\n                message: \"加载失败\"\n            });\n        });\n        if (this.isFinished)\n            this.showAns();\n    },\n    methods: {\n        test(value) {\n            for (let e of this.optAns)\n                console.log(e);\n        },\n        // 提交按钮点击事件\n        clickSubmit() {\n            // 将答案移到UserAnswers中\n            this.UserAnswers = [];\n            let i = 0;\n            for (let e of this.optAns) {\n                if (e === undefined || e === '')\n                    this.UserAnswers[i++] = 'null';\n                else\n                    this.UserAnswers[i++] = e;\n            }\n            for (let e of this.multiAns) {\n                if (e === undefined || e === [])\n                    this.UserAnswers[i++] = 'null';\n                else\n                    this.UserAnswers[i++] = e.sort().join('');\n            }\n            for (let e of this.TFAns) {\n                if (e === undefined || e === '')\n                    this.UserAnswers[i++] = 'null';\n                else\n                    this.UserAnswers[i++] = e;\n            }\n            for (let e of this.blanAns) {\n                if (e === undefined || e === '')\n                    this.UserAnswers[i++] = 'null';\n                else\n                    this.UserAnswers[i++] = e;\n            }\n\n            console.log(this.UserAnswers);\n            this.dialogVisible = true;\n            let answerdNum = 0;\n            for (let e of this.UserAnswers) {\n                if (e !== 'null')\n                    answerdNum++;\n            }\n            if (answerdNum === this.UserAnswers.length)\n                this.isFinished = true;\n        },\n        // 提交答案\n        submit() {\n            this.dialogVisible = false;\n            let answers = this.UserAnswers.join('@');\n            let url = `ChapterID=${this.ChapterID}&TestID=${this.TestID}&UserID=${this.$store.state.userInfo.userID}&Answers=${answers}`;\n            request.post(url).then(res => {\n                if (res.status === 200) {\n                    this.$message({\n                        type: \"success\",\n                        message: \"提交成功\"\n                    });\n                    this.showAns();\n                }\n            }).catch(error => {\n                console.log(error);\n                this.$message({\n                    type: \"error\",\n                    message: \"提交失败\"\n                });\n            })\n        },\n        // 获取用户之前的答题信息以及正确答案\n        showAns() {\n            let url = `/user/getcorrectanswers?ChapterID=${this.ChapterID}&TestID=${this.TestID}&UserID=${this.UserID}`;\n            request.get(url).then(res => {\n                if (res.status === 200) {\n                    this.correctAnswers = res.data.data['correct answer'].split('@');\n                    this.checkResult = res.data.data['result'];\n                    this.UserAnswers = res.data.data['user answer'].split('@');\n                    // 计算分数(正确率)\n                    this.score = 0;\n                    this.checkResult.forEach((value) => {\n                        if (value === true)\n                            this.score++;\n                    });\n                    this.score /= this.checkResult.length;\n                }\n            }).catch(error => {\n                this.$message({\n                    type: \"error\",\n                    message: \"获取答题信息失败\"\n                });\n            })\n        },\n        // 上传文件相关方法\n        onBeforeUpload(file) {\n            const isIMAGE = file.type === 'image/jpeg' || 'image/gif' || 'image/png';\n            const isLt1M = file.size / 1024 / 1024 < 1;\n\n            if (!isIMAGE) {\n                this.$message.error('上传文件只能是图片格式!');\n            }\n            if (!isLt1M) {\n                this.$message.error('上传文件大小不能超过 1MB!');\n            }\n            return isIMAGE && isLt1M;\n        },\n        uploadError(err, file, fileList) {\n            console.log(err);\n            console.log(fileList);\n        },\n        uploadSuccess(response, file, fileList) {\n            console.log(response);\n            console.log(fileList);\n        },\n        handleChange(file, fileList, index) {\n            this.codefileList[index] = fileList;\n            console.log(fileList);\n        },\n        fileRemove(file, fileList, index) {\n            console.log(fileList);\n            this.codefileList[index] = fileList;\n        },\n        // 上传文件\n        upload(index) {\n            let fd = new FormData();\n            // 判断文件列表是否为空\n            if (this.codefileList[index].length === 0) {\n                this.$message({\n                    type: \"error\",\n                    message: \"未提交文件\"\n                });\n                return;\n            }\n\n            let raw = this.codefileList[index][0].raw;\n            fd.append(\"codes\", raw);\n            console.log(raw)\n\n            let url = `/user/uploadcodes?ChapterID=${this.ChapterID}&TestID=${this.TestID}`\n            request.post(url, fd).then(res => {\n                if (res.status === 200) {\n                    this.$message('上传成功')\n                }\n            }).catch(error => {\n                console.log(error);\n                this.$message({\n                    type: \"error\",\n                    message: \"上传失败\"\n                });\n            })\n        },\n        // 根据Index生成大写字母\n        getAlpha(index) {\n            return String.fromCharCode(65 + index);\n        }\n\n    }\n}\n</script>\n\n<style scoped>\n.option {\n    margin-left: 0.5em;\n}\n\n.TFOpt {\n    color: rgb(74 74 74) !important;\n    font-size: 1.5em;\n    font-weight: normal !important;\n}\n\n.el-upload__text,\n.el-upload__tip {\n    font-size: 1.3em;\n}\n\n.btn {\n    font-size: 1em;\n}\n\n.unFinishWarn {\n    color: red;\n    text-align: left;\n    margin-top: 4%;\n\n}\n\n.score {\n    font-size: 0.8em;\n    font-weight: normal;\n    float: right;\n}\n\n.el-icon-close {\n    color: red;\n    text-align: right;\n    font-weight: bolder;\n}\n\n.quesNum {\n    font-weight: bold;\n    font-size: 1.15em;\n    margin-right: 20px;\n    vertical-align: baseline;\n\n}\n\n.headline {\n    font-size: 30px;\n    font-weight: bold;\n}\n\n.quesTitle {\n    font-size: 20px;\n    margin-top: 10px;\n    margin-bottom: 0;\n    line-height: 2\n}\n\n.wrongAns {\n    background-color: #fef0f0;\n    color: #f56c6c;\n}\n\n.main {\n    margin: 1% 24%;\n    padding: 2% 5%;\n    text-align: left;\n    border-radius: 15px;\n    background-color: white;\n    font-size: 20px;\n}\n\n.subBtn {\n    width: 15%;\n    font-size: 20px;\n}\n\n/deep/ .el-input__inner {\n    height: 42px;\n    line-height: 42px;\n}\n\n.el-radio, .el-checkbox {\n    /*margin-left: 20px;*/\n}\n\n.el-input {\n    font-size: 20px;\n}\n\n.el-radio /deep/ .el-radio__label,\n.el-checkbox /deep/ .el-checkbox__label {\n    line-height: 2;\n    font-size: 20px;\n    color: #626262;\n    text-overflow: ellipsis;\n    white-space: normal;\n    display: inline-flex;\n    flex-direction: row;\n}\n\n.correctAnswer {\n    color: #67c23a;\n    line-height: 2;\n    font-size: 20px;\n}\n\n\n.title {\n    margin-left: 3%;\n    float: left;\n    font-size: 36px;\n    font-family: \"Helvetica Neue\", Helvetica, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"微软雅黑\", Arial, sans-serif;\n    max-width: 10em;\n    word-break: break-word;\n    line-height: 1.5em;\n}\n</style>\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AnswerCar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AnswerCar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AnswerCar.vue?vue&type=template&id=fcb329d4&scoped=true&\"\nimport script from \"./AnswerCar.vue?vue&type=script&lang=js&\"\nexport * from \"./AnswerCar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./AnswerCar.vue?vue&type=style&index=0&id=fcb329d4&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fcb329d4\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","ChapterID","TestName","score","_e","_l","t","i","attrs","class","checkResult","optQuesRes","number","title","on","test","model","value","optAns","callback","$$v","$set","expression","e","j","getAlpha","correctAnswers","multiOptQuesRes","multiAns","TFQuesRes","TFAns","blanQuesRes","staticStyle","blanAns","clickSubmit","codefileList","uploadError","uploadSuccess","file","fileList","handleChange","fileRemove","upload","dialogVisible","$event","isFinished","slot","submit","staticRenderFns","name","data","TestID","UserID","chapterName","isSubmit","optQuesList","options","optQuestion","multiOptQuestList","TFQuestionList","blankQuesList","blankQuestion","programQuestList","UserAnswers","created","console","request","catch","error","type","message","methods","answerdNum","showAns","onBeforeUpload","fd","component"],"sourceRoot":""}