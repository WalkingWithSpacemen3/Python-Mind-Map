{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport Node from '../Node';\nimport { walk } from '../utils';\n/** \n * @Author: 王林 \n * @Date: 2021-04-12 22:24:30 \n * @Desc: 布局基类 \n */\n\nclass Base {\n  /** \n   * @Author: 王林 \n   * @Date: 2021-04-12 22:25:16 \n   * @Desc: 构造函数 \n   */\n  constructor(renderer) {\n    // 渲染实例\n    this.renderer = renderer; // 控制实例\n\n    this.mindMap = renderer.mindMap; // 绘图对象\n\n    this.draw = this.mindMap.draw; // 根节点\n\n    this.root = null;\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-04-12 22:39:50 \n   * @Desc: 计算节点位置 \n   */\n\n\n  doLayout() {\n    throw new Error('【computed】方法为必要方法，需要子类进行重写！');\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-04-12 22:41:04 \n   * @Desc: 连线 \n   */\n\n\n  renderLine() {\n    throw new Error('【renderLine】方法为必要方法，需要子类进行重写！');\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-04-12 22:42:08 \n   * @Desc: 定位展开收缩按钮 \n   */\n\n\n  renderExpandBtn() {\n    throw new Error('【renderExpandBtn】方法为必要方法，需要子类进行重写！');\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2022-07-30 22:49:28 \n   * @Desc: 概要节点 \n   */\n\n\n  renderGeneralization() {}\n  /** \n   * @Author: 王林 \n   * @Date: 2021-07-10 21:30:54 \n   * @Desc: 创建节点实例 \n   */\n\n\n  createNode(data, parent, isRoot, layerIndex) {\n    // 创建节点\n    let newNode = null; // 复用节点\n\n    if (data && data._node && !this.renderer.reRender) {\n      newNode = data._node;\n      newNode.reset();\n      newNode.layerIndex = layerIndex;\n    } else {\n      // 创建新节点\n      newNode = new Node({\n        data,\n        uid: this.mindMap.uid++,\n        renderer: this.renderer,\n        mindMap: this.mindMap,\n        draw: this.draw,\n        layerIndex\n      });\n      newNode.getSize(); // 数据关联实际节点\n\n      data._node = newNode;\n\n      if (data.data.isActive) {\n        this.renderer.addActiveNode(newNode);\n      }\n\n      if (data.data.isExplainNode) {\n        newNode.isExplainNode = true;\n      }\n    } // 根节点\n\n\n    if (isRoot) {\n      newNode.isRoot = true;\n      this.root = newNode;\n    } else {\n      // 互相收集\n      newNode.parent = parent._node;\n\n      parent._node.addChildren(newNode);\n    }\n\n    return newNode;\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-07-16 13:48:43 \n   * @Desc: 定位节点到画布中间 \n   */\n\n\n  setNodeCenter(node) {\n    node.left = (this.mindMap.width - node.width) / 2;\n    node.top = (this.mindMap.height - node.height) / 2;\n  }\n  /** \n   * javascript comment \n   * @Author: 王林25 \n   * @Date: 2021-04-07 11:25:52 \n   * @Desc: 更新子节点属性 \n   */\n\n\n  updateChildren(children, prop, offset) {\n    children.forEach(item => {\n      item[prop] += offset;\n\n      if (item.children && item.children.length && !item.hasCustomPosition()) {\n        // 适配自定义位置\n        this.updateChildren(item.children, prop, offset);\n      }\n    });\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-04-11 15:05:01 \n   * @Desc: 二次贝塞尔曲线 \n   */\n\n\n  quadraticCurvePath(x1, y1, x2, y2) {\n    let cx = x1 + (x2 - x1) * 0.2;\n    let cy = y1 + (y2 - y1) * 0.8;\n    return `M ${x1},${y1} Q ${cx},${cy} ${x2},${y2}`;\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-04-11 15:05:18 \n   * @Desc: 三次贝塞尔曲线 \n   */\n\n\n  cubicBezierPath(x1, y1, x2, y2) {\n    let cx1 = x1 + (x2 - x1) / 2;\n    let cy1 = y1;\n    let cx2 = cx1;\n    let cy2 = y2;\n    return `M ${x1},${y1} C ${cx1},${cy1} ${cx2},${cy2} ${x2},${y2}`;\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-06-27 19:00:07 \n   * @Desc:  获取节点的marginX\n   */\n\n\n  getMarginX(layerIndex) {\n    return layerIndex === 1 ? this.mindMap.themeConfig.firstNode.marginX : this.mindMap.themeConfig.secondNode.marginX;\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-04-11 15:34:20 \n   * @Desc: 获取节点的marginY\n   */\n\n\n  getMarginY(layerIndex) {\n    return layerIndex === 1 ? this.mindMap.themeConfig.firstNode.marginY : this.mindMap.themeConfig.secondNode.marginY;\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2022-07-31 20:53:12 \n   * @Desc: 获取节点包括概要在内的宽度 \n   */\n\n\n  getNodeWidthWithGeneralization(node) {\n    return Math.max(node.width, node.checkHasGeneralization() ? node._generalizationNodeWidth : 0);\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2022-07-31 20:53:12 \n   * @Desc: 获取节点包括概要在内的高度 \n   */\n\n\n  getNodeHeightWithGeneralization(node) {\n    return Math.max(node.height, node.checkHasGeneralization() ? node._generalizationNodeHeight : 0);\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2022-07-31 09:14:03 \n   * @Desc: 获取节点的边界值 \n   * dir：生长方向，h（水平）、v（垂直）\n   * isLeft：是否向左生长\n   */\n\n\n  getNodeBoundaries(node, dir, isLeft) {\n    let {\n      generalizationLineMargin,\n      generalizationNodeMargin\n    } = this.mindMap.themeConfig;\n\n    let walk = root => {\n      let _left = Infinity;\n\n      let _right = -Infinity;\n\n      let _top = Infinity;\n\n      let _bottom = -Infinity;\n\n      if (root.children && root.children.length > 0) {\n        root.children.forEach(child => {\n          let {\n            left,\n            right,\n            top,\n            bottom\n          } = walk(child); // 概要内容的宽度\n\n          let generalizationWidth = child.checkHasGeneralization() && child.nodeData.data.expand ? child._generalizationNodeWidth + generalizationNodeMargin : 0; // 概要内容的高度\n\n          let generalizationHeight = child.checkHasGeneralization() && child.nodeData.data.expand ? child._generalizationNodeHeight + generalizationNodeMargin : 0;\n\n          if (left - (dir === 'h' ? generalizationWidth : 0) < _left) {\n            _left = left - (dir === 'h' ? generalizationWidth : 0);\n          }\n\n          if (right + (dir === 'h' ? generalizationWidth : 0) > _right) {\n            _right = right + (dir === 'h' ? generalizationWidth : 0);\n          }\n\n          if (top < _top) {\n            _top = top;\n          }\n\n          if (bottom + (dir === 'v' ? generalizationHeight : 0) > _bottom) {\n            _bottom = bottom + (dir === 'v' ? generalizationHeight : 0);\n          }\n        });\n      }\n\n      let cur = {\n        left: root.left,\n        right: root.left + root.width,\n        top: root.top,\n        bottom: root.top + root.height\n      };\n      return {\n        left: cur.left < _left ? cur.left : _left,\n        right: cur.right > _right ? cur.right : _right,\n        top: cur.top < _top ? cur.top : _top,\n        bottom: cur.bottom > _bottom ? cur.bottom : _bottom\n      };\n    };\n\n    let {\n      left,\n      right,\n      top,\n      bottom\n    } = walk(node);\n    return {\n      left,\n      right,\n      top,\n      bottom,\n      generalizationLineMargin,\n      generalizationNodeMargin\n    };\n  }\n\n}\n\nexport default Base;","map":{"version":3,"names":["Node","walk","Base","constructor","renderer","mindMap","draw","root","doLayout","Error","renderLine","renderExpandBtn","renderGeneralization","createNode","data","parent","isRoot","layerIndex","newNode","_node","reRender","reset","uid","getSize","isActive","addActiveNode","isExplainNode","addChildren","setNodeCenter","node","left","width","top","height","updateChildren","children","prop","offset","forEach","item","length","hasCustomPosition","quadraticCurvePath","x1","y1","x2","y2","cx","cy","cubicBezierPath","cx1","cy1","cx2","cy2","getMarginX","themeConfig","firstNode","marginX","secondNode","getMarginY","marginY","getNodeWidthWithGeneralization","Math","max","checkHasGeneralization","_generalizationNodeWidth","getNodeHeightWithGeneralization","_generalizationNodeHeight","getNodeBoundaries","dir","isLeft","generalizationLineMargin","generalizationNodeMargin","_left","Infinity","_right","_top","_bottom","child","right","bottom","generalizationWidth","nodeData","expand","generalizationHeight","cur"],"sources":["D:/aimeelina/python/mindmap/node_modules/simple-mind-map/src/layouts/Base.js"],"sourcesContent":["import Node from '../Node'\nimport {\n    walk,\n} from '../utils'\n\n/** \n * @Author: 王林 \n * @Date: 2021-04-12 22:24:30 \n * @Desc: 布局基类 \n */\nclass Base {\n    /** \n     * @Author: 王林 \n     * @Date: 2021-04-12 22:25:16 \n     * @Desc: 构造函数 \n     */\n    constructor(renderer) {\n        // 渲染实例\n        this.renderer = renderer\n        // 控制实例\n        this.mindMap = renderer.mindMap\n        // 绘图对象\n        this.draw = this.mindMap.draw\n        // 根节点\n        this.root = null\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-04-12 22:39:50 \n     * @Desc: 计算节点位置 \n     */\n    doLayout() {\n        throw new Error('【computed】方法为必要方法，需要子类进行重写！')\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-04-12 22:41:04 \n     * @Desc: 连线 \n     */\n    renderLine() {\n        throw new Error('【renderLine】方法为必要方法，需要子类进行重写！')\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-04-12 22:42:08 \n     * @Desc: 定位展开收缩按钮 \n     */\n    renderExpandBtn() {\n        throw new Error('【renderExpandBtn】方法为必要方法，需要子类进行重写！')\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2022-07-30 22:49:28 \n     * @Desc: 概要节点 \n     */\n    renderGeneralization() {}\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-07-10 21:30:54 \n     * @Desc: 创建节点实例 \n     */\n    createNode(data, parent, isRoot, layerIndex) {\n        // 创建节点\n        let newNode = null\n        // 复用节点\n        if (data && data._node && !this.renderer.reRender) {\n            newNode = data._node\n            newNode.reset()\n            newNode.layerIndex = layerIndex\n        } else {// 创建新节点\n            newNode = new Node({\n                data,\n                uid: this.mindMap.uid++,\n                renderer: this.renderer,\n                mindMap: this.mindMap,\n                draw: this.draw,\n                layerIndex\n            })\n            newNode.getSize()\n            // 数据关联实际节点\n            data._node = newNode\n            if (data.data.isActive) {\n                this.renderer.addActiveNode(newNode)\n            }\n            if (data.data.isExplainNode) {\n                newNode.isExplainNode = true\n            }\n        }\n        // 根节点\n        if (isRoot) {\n            newNode.isRoot = true\n            this.root = newNode\n        } else {\n            // 互相收集\n            newNode.parent = parent._node\n            parent._node.addChildren(newNode)\n        }\n        return newNode;\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-07-16 13:48:43 \n     * @Desc: 定位节点到画布中间 \n     */\n    setNodeCenter(node) {\n        node.left = (this.mindMap.width - node.width) / 2\n        node.top = (this.mindMap.height - node.height) / 2\n    }\n\n    /** \n     * javascript comment \n     * @Author: 王林25 \n     * @Date: 2021-04-07 11:25:52 \n     * @Desc: 更新子节点属性 \n     */\n    updateChildren(children, prop, offset) {\n        children.forEach((item) => {\n            item[prop] += offset\n            if (item.children && item.children.length && !item.hasCustomPosition()) {// 适配自定义位置\n                this.updateChildren(item.children, prop, offset)\n            }\n        })\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-04-11 15:05:01 \n     * @Desc: 二次贝塞尔曲线 \n     */\n    quadraticCurvePath(x1, y1, x2, y2) {\n        let cx = x1 + (x2 - x1) * 0.2\n        let cy = y1 + (y2 - y1) * 0.8\n        return `M ${x1},${y1} Q ${cx},${cy} ${x2},${y2}`\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-04-11 15:05:18 \n     * @Desc: 三次贝塞尔曲线 \n     */\n    cubicBezierPath(x1, y1, x2, y2) {\n        let cx1 = x1 + (x2 - x1) / 2\n        let cy1 = y1\n        let cx2 = cx1\n        let cy2 = y2\n        return `M ${x1},${y1} C ${cx1},${cy1} ${cx2},${cy2} ${x2},${y2}`\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-06-27 19:00:07 \n     * @Desc:  获取节点的marginX\n     */\n    getMarginX(layerIndex) {\n        return layerIndex === 1 ? this.mindMap.themeConfig.firstNode.marginX : this.mindMap.themeConfig.secondNode.marginX;\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-04-11 15:34:20 \n     * @Desc: 获取节点的marginY\n     */\n    getMarginY(layerIndex) {\n        return layerIndex === 1 ? this.mindMap.themeConfig.firstNode.marginY : this.mindMap.themeConfig.secondNode.marginY;\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2022-07-31 20:53:12 \n     * @Desc: 获取节点包括概要在内的宽度 \n     */\n    getNodeWidthWithGeneralization(node) {\n        return Math.max(node.width, node.checkHasGeneralization() ? node._generalizationNodeWidth : 0)\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2022-07-31 20:53:12 \n     * @Desc: 获取节点包括概要在内的高度 \n     */\n    getNodeHeightWithGeneralization(node) {\n        return Math.max(node.height, node.checkHasGeneralization() ? node._generalizationNodeHeight : 0)\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2022-07-31 09:14:03 \n     * @Desc: 获取节点的边界值 \n     * dir：生长方向，h（水平）、v（垂直）\n     * isLeft：是否向左生长\n     */\n    getNodeBoundaries(node, dir, isLeft) {\n        let { generalizationLineMargin, generalizationNodeMargin } = this.mindMap.themeConfig\n        let walk = (root) => {\n            let _left = Infinity\n            let _right = -Infinity\n            let _top = Infinity\n            let _bottom = -Infinity\n            if (root.children && root.children.length > 0) {\n                root.children.forEach((child) => {\n                    let {left, right, top, bottom} = walk(child)\n                    // 概要内容的宽度\n                    let generalizationWidth = child.checkHasGeneralization() && child.nodeData.data.expand ? child._generalizationNodeWidth + generalizationNodeMargin : 0\n                    // 概要内容的高度\n                    let generalizationHeight = child.checkHasGeneralization() && child.nodeData.data.expand ? child._generalizationNodeHeight + generalizationNodeMargin : 0\n                    if (left - (dir === 'h' ? generalizationWidth : 0) < _left) {\n                        _left = left - (dir === 'h' ? generalizationWidth : 0)\n                    }\n                    if (right + (dir === 'h' ? generalizationWidth : 0) > _right) {\n                        _right = right + (dir === 'h' ? generalizationWidth : 0)\n                    }\n                    if (top < _top) {\n                        _top = top\n                    }\n                    if (bottom + (dir === 'v' ? generalizationHeight : 0) > _bottom) {\n                        _bottom = bottom + (dir === 'v' ? generalizationHeight : 0)\n                    }\n                })\n            }\n            let cur = {\n                left: root.left,\n                right: root.left + root.width,\n                top: root.top,\n                bottom: root.top + root.height\n            }\n            return {\n                left: cur.left < _left ? cur.left : _left,\n                right: cur.right > _right ? cur.right : _right,\n                top: cur.top < _top ? cur.top : _top,\n                bottom: cur.bottom > _bottom ? cur.bottom : _bottom\n            }\n        }\n        let {left, right, top, bottom} = walk(node)\n        return {\n            left, \n            right,\n            top,\n            bottom,\n            generalizationLineMargin,\n            generalizationNodeMargin\n        };\n    }\n}\n\nexport default Base"],"mappings":"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"},"metadata":{},"sourceType":"module"}