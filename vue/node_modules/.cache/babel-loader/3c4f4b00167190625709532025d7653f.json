{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MindMap from 'simple-mind-map';\nimport { getData, storeData, storeConfig } from '@/api'; // import {PDFWorker as PDFJS} from \"pdfjs-dist\";\n\nconst pdfjsLib = require(\"pdfjs-dist/build/pdf\");\n\nconst pdfjsWorker = require(\"pdfjs-dist/build/pdf.worker.entry\");\n\nexport default {\n  name: 'HelloWorld',\n  props: ['index'],\n\n  data() {\n    return {\n      mindmapdata: null,\n      pdfLink: \"/Ch3_loop.pdf\",\n      drawer: false,\n      direction: 'rtl',\n      title: ''\n    };\n  },\n\n  mounted() {\n    this.getData();\n    this.init();\n  },\n\n  methods: {\n    getData() {\n      let storeData = getData();\n      this.mindMapData = storeData.python_trees[this.$props.index];\n    },\n\n    init() {\n      let {\n        root,\n        layout,\n        theme,\n        view\n      } = this.mindMapData;\n      this.mindMap = new MindMap({\n        el: document.getElementById('mindMapContainer'),\n        data: root,\n        layout: layout,\n        theme: 'diyColor',\n        themeConfig: theme.config,\n        viewData: view,\n        readonly: true\n      });\n      let themeConfig = this.mindMap.getCustomThemeConfig();\n      themeConfig.backgroundColor = '#2f2f32'; // this.mindMap.on('mousedown', (...args) => {\n      //     console.log(\"鼠标按下\")\n      //     this.mindMap.setTheme('diyColor')\n      //     console.log(\"this.mindMap.themeConfig\",this.mindMap.themeConfig)\n      //\n      //   })\n      // this.mindMap.on('node_mousedown', (data) => {\n      //   console.log(\"nodemousedown  data\",data)\n      //   //console.log(\"nodemousedown datae\",e)\n      // });\n      // this.mindMap.render()\n\n      this.mindMap.view.translateX(-600);\n      this.mindMap.on('node_click', data => {\n        if (data.ableToClick === true) {\n          this.drawer = true;\n          let pointText = data.nodeData.data.text;\n          this.title = pointText;\n          this.showPdf(this.pdfLink);\n          console.log(\"node_click\", data);\n        }\n      });\n    },\n\n    showPdf(pdfPath) {\n      console.log('showpdf');\n\n      let _this = this;\n\n      let imgArr = [];\n      pdfjsLib.workerSrc = require('pdfjs-dist/build/pdf.worker'); // pdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\n      let loadingTask = pdfjsLib.getDocument(pdfPath); // PDFJS.workerSrc = 'pdf.worker.js';// pdfjsLib为undefined可以换成这行\n      // let loadingTask = PDFJS.getDocument(pdfPath);// pdfjsLib为undefined可以换成这行\n\n      loadingTask.promise.then(function (pdf) {\n        console.log('PDF loaded');\n        let pageNum = pdf.numPages; // console.log(pageNum);\n\n        for (let i = 1; i <= pageNum; i++) {\n          pdf.getPage(i).then(function (page) {\n            console.log('Page loaded');\n            let scale = 1;\n            let viewport = page.getViewport(scale); // let canvas = document.getElementById('the-canvas');\n\n            let canvas = document.createElement(\"canvas\");\n            let context = canvas.getContext('2d');\n            canvas.height = viewport.height;\n            canvas.width = viewport.width;\n            let renderContext = {\n              canvasContext: context,\n              viewport: viewport\n            };\n            let renderTask = page.render(renderContext);\n            renderTask.promise.then(function () {\n              console.log('Page rendered');\n              let imgUrl = canvas.toDataURL('image/jpeg'); //转换为base64\n\n              if (imgUrl) {\n                imgArr[i - 1] = imgUrl;\n              } //pdf全部画完结束后操作\n\n\n              if (imgArr.length === pageNum && !isEmpty(imgArr)) {\n                // let canvas2 = document.createElement(\"canvas\");\n                let canvas2 = document.getElementById('the-canvas');\n                let context2 = canvas2.getContext('2d');\n                canvas2.height = viewport.height * pageNum;\n                canvas2.width = viewport.width;\n                let count = 0;\n\n                for (let j = 0; j < imgArr.length; j++) {\n                  let IMG = new Image();\n                  IMG.src = imgArr[j];\n                  IMG.width = viewport.width;\n                  IMG.height = viewport.height;\n\n                  IMG.onload = function () {\n                    context2.drawImage(IMG, 0, viewport.height * j);\n                    count++; //确保所有img渲染结束后操作\n\n                    if (count === pageNum) {\n                      let canvas = document.getElementById('the-canvas'); //赋值给img\n\n                      _this.imgUrl = canvas.toDataURL('image/jpeg');\n                    }\n                  };\n                }\n              }\n            });\n          });\n        }\n      }, function (reason) {\n        console.error(reason);\n      });\n\n      function isEmpty(arr) {\n        for (let i = 0; i < arr.length; i++) {\n          if (!arr[i]) return true;\n        }\n\n        return false;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA,wD,CACA;;AAEA;;AACA;;AAEA;EACAA,kBADA;EAEAC,gBAFA;;EAGAC;IACA;MACAC,iBADA;MAIAC,wBAJA;MAKAC,aALA;MAMAC,gBANA;MAOAC;IAPA;EASA,CAbA;;EAcAC;IACA;IACA;EACA,CAjBA;;EAkBAC;IACAC;MACA;MACA;IACA,CAJA;;IAKAC;MACA;QAAAC;QAAAC;QAAAC;QAAAC;MAAA;MACA;QACAC,+CADA;QAEAd,UAFA;QAGAW,cAHA;QAIAC,iBAJA;QAKAG,yBALA;QAMAC,cANA;QAOAC;MAPA;MASA;MACAF,wCAZA,CAaA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MACA;MACA;QACA;UACA;UACA;UACA;UACA;UACAG;QACA;MACA,CARA;IASA,CAvCA;;IAwCAC;MACAD;;MACA;;MACA;MACAE,4DAJA,CAKA;;MACA,gDANA,CAOA;MACA;;MACAC;QACAH;QACA,2BAFA,CAGA;;QACA;UACAI;YACAJ;YAEA;YACA,uCAJA,CAMA;;YACA;YACA;YACAK;YACAA;YAEA;cACAC,sBADA;cAEAC;YAFA;YAIA;YACAC;cACAR;cACA,4CAFA,CAEA;;cACA;gBACAS;cACA,CALA,CAMA;;;cACA;gBACA;gBACA;gBACA;gBACAC;gBACAA;gBACA;;gBACA;kBACA;kBACAC;kBACAA;kBACAA;;kBACAA;oBACAC;oBACAC,QAFA,CAEA;;oBACA;sBACA,mDADA,CAEA;;sBACAC;oBACA;kBACA,CARA;gBASA;cACA;YACA,CA9BA;UA+BA,CAhDA;QAiDA;MACA,CAvDA,EAuDA;QACAd;MACA,CAzDA;;MA2DA;QACA;UACA,aACA;QACA;;QACA;MACA;IACA;;EAnHA;AAlBA","names":["name","props","data","mindmapdata","pdfLink","drawer","direction","title","mounted","methods","getData","init","root","layout","theme","view","el","themeConfig","viewData","readonly","console","showPdf","pdfjsLib","loadingTask","pdf","canvas","canvasContext","viewport","renderTask","imgArr","canvas2","IMG","context2","count","_this"],"sourceRoot":"src/components","sources":["HelloWorld.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"editContainer\">\r\n      <div class=\"mindMapContainer\" id=\"mindMapContainer\"></div>\r\n      <mindmap height=\"50\" width=\"50%\"></mindmap>\r\n    </div>\r\n    <el-drawer\r\n        id=\"drawer\"\r\n        title=\"\"\r\n        :visible.sync=\"drawer\"\r\n        direction=\"rtl\"\r\n        :modal=\"false\"\r\n        :modal-append-to-body=\"false\"\r\n        size=\"20%\">\r\n      <span slot=\"title\" style=\"font-size: 30px; color:  #cccccc\">{{ title }}</span>\r\n      <div class=\"pdfLink\">\r\n\r\n        <router-link rel=\"external nofollow\" target=\"_blank\" :to=\"pdfLink\">\r\n          <canvas id=\"the-canvas\" style=\"display: none\"></canvas>\r\n          <img :src=\"imgUrl\" alt=\"pdf\" width=\"100%\" height=\"auto\">\r\n        </router-link>\r\n      </div>\r\n    </el-drawer>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nimport MindMap from 'simple-mind-map'\r\nimport {getData, storeData, storeConfig} from '@/api'\r\n// import {PDFWorker as PDFJS} from \"pdfjs-dist\";\r\n\r\nconst pdfjsLib = require(\"pdfjs-dist/build/pdf\");\r\nconst pdfjsWorker = require(\"pdfjs-dist/build/pdf.worker.entry\")\r\n\r\nexport default {\r\n  name: 'HelloWorld',\r\n  props: ['index'],\r\n  data() {\r\n    return {\r\n      mindmapdata: null,\r\n\r\n\r\n      pdfLink: \"/Ch3_loop.pdf\",\r\n      drawer: false,\r\n      direction: 'rtl',\r\n      title: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getData()\r\n    this.init()\r\n  },\r\n  methods: {\r\n    getData() {\r\n      let storeData = getData();\r\n      this.mindMapData = storeData.python_trees[this.$props.index];\r\n    },\r\n    init() {\r\n      let {root, layout, theme, view} = this.mindMapData;\r\n      this.mindMap = new MindMap({\r\n        el: document.getElementById('mindMapContainer'),\r\n        data: root,\r\n        layout: layout,\r\n        theme: 'diyColor',\r\n        themeConfig: theme.config,\r\n        viewData: view,\r\n        readonly: true\r\n      });\r\n      let themeConfig = this.mindMap.getCustomThemeConfig();\r\n      themeConfig.backgroundColor = '#2f2f32';\r\n      // this.mindMap.on('mousedown', (...args) => {\r\n      //     console.log(\"鼠标按下\")\r\n      //     this.mindMap.setTheme('diyColor')\r\n      //     console.log(\"this.mindMap.themeConfig\",this.mindMap.themeConfig)\r\n      //\r\n      //   })\r\n      // this.mindMap.on('node_mousedown', (data) => {\r\n      //   console.log(\"nodemousedown  data\",data)\r\n      //   //console.log(\"nodemousedown datae\",e)\r\n      // });\r\n      // this.mindMap.render()\r\n      this.mindMap.view.translateX(-600);\r\n      this.mindMap.on('node_click', (data) => {\r\n        if (data.ableToClick === true) {\r\n          this.drawer = true;\r\n          let pointText = data.nodeData.data.text;\r\n          this.title = pointText;\r\n          this.showPdf(this.pdfLink);\r\n          console.log(\"node_click\", data);\r\n        }\r\n      });\r\n    },\r\n    showPdf(pdfPath) {\r\n      console.log('showpdf');\r\n      let _this = this;\r\n      let imgArr = [];\r\n      pdfjsLib.workerSrc = require('pdfjs-dist/build/pdf.worker');\r\n      // pdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\r\n      let loadingTask = pdfjsLib.getDocument(pdfPath);\r\n      // PDFJS.workerSrc = 'pdf.worker.js';// pdfjsLib为undefined可以换成这行\r\n      // let loadingTask = PDFJS.getDocument(pdfPath);// pdfjsLib为undefined可以换成这行\r\n      loadingTask.promise.then(function (pdf) {\r\n        console.log('PDF loaded');\r\n        let pageNum = pdf.numPages;\r\n        // console.log(pageNum);\r\n        for (let i = 1; i <= pageNum; i++) {\r\n          pdf.getPage(i).then(function (page) {\r\n            console.log('Page loaded');\r\n\r\n            let scale = 1;\r\n            let viewport = page.getViewport(scale);\r\n\r\n            // let canvas = document.getElementById('the-canvas');\r\n            let canvas = document.createElement(\"canvas\");\r\n            let context = canvas.getContext('2d');\r\n            canvas.height = viewport.height;\r\n            canvas.width = viewport.width;\r\n\r\n            let renderContext = {\r\n              canvasContext: context,\r\n              viewport: viewport\r\n            };\r\n            let renderTask = page.render(renderContext);\r\n            renderTask.promise.then(function () {\r\n              console.log('Page rendered');\r\n              let imgUrl = canvas.toDataURL('image/jpeg'); //转换为base64\r\n              if (imgUrl) {\r\n                imgArr[i - 1] = imgUrl;\r\n              }\r\n              //pdf全部画完结束后操作\r\n              if (imgArr.length === pageNum && !isEmpty(imgArr)) {\r\n                // let canvas2 = document.createElement(\"canvas\");\r\n                let canvas2 = document.getElementById('the-canvas');\r\n                let context2 = canvas2.getContext('2d');\r\n                canvas2.height = viewport.height * pageNum;\r\n                canvas2.width = viewport.width;\r\n                let count = 0;\r\n                for (let j = 0; j < imgArr.length; j++) {\r\n                  let IMG = new Image();\r\n                  IMG.src = imgArr[j];\r\n                  IMG.width = viewport.width;\r\n                  IMG.height = viewport.height;\r\n                  IMG.onload = function () {\r\n                    context2.drawImage(IMG, 0, viewport.height * j);\r\n                    count++;//确保所有img渲染结束后操作\r\n                    if (count === pageNum) {\r\n                      let canvas = document.getElementById('the-canvas');\r\n                      //赋值给img\r\n                      _this.imgUrl = canvas.toDataURL('image/jpeg');\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }, function (reason) {\r\n        console.error(reason);\r\n      });\r\n\r\n      function isEmpty(arr) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n          if (!arr[i])\r\n            return true;\r\n        }\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped lang=\"less\">\r\nh3 {\r\n  margin: 40px 0 0;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\n\r\na {\r\n  color: #42b983;\r\n}\r\n</style>\r\n<style lang=\"less\" scoped>\r\n.pdfLink {\r\n  padding-left: 50px;\r\n  color: #42b983;\r\n  font-size: 30px;\r\n}\r\n\r\n.pdfLink > a {\r\n  text-decoration: none;\r\n}\r\n\r\n/deep/ .el-drawer.rtl {\r\n  border-radius: 20px;\r\n  background-color: #39393c;\r\n  width: 20%;\r\n}\r\n\r\n#drawer {\r\n  top: 70px;\r\n  bottom: 7px;\r\n}\r\n\r\n.courseName {\r\n  position: relative;\r\n  top: 5%;\r\n  left: 5%;\r\n  font-size: 40px;\r\n}\r\n\r\n.editContainer {\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  background-color: #2c3e50;\r\n\r\n  .mindMapContainer {\r\n    position: absolute;\r\n    left: 0px;\r\n    top: 0px;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}