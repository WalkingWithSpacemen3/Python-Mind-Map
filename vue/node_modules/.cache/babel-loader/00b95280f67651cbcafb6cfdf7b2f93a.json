{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { bfsWalk, throttle } from 'simple-mind-map/src/utils';\n/** \n * @Author: 王林 \n * @Date: 2021-07-10 22:34:51 \n * @Desc: 选择节点类 \n */\n\nclass Select {\n  /** \n   * @Author: 王林 \n   * @Date: 2021-07-10 22:35:16 \n   * @Desc: 构造函数 \n   */\n  constructor({\n    mindMap\n  }) {\n    this.mindMap = mindMap;\n    this.rect = null;\n    this.isMousedown = false;\n    this.mouseDownX = 0;\n    this.mouseDownY = 0;\n    this.mouseMoveX = 0;\n    this.mouseMoveY = 0;\n    this.bindEvent();\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-07-10 22:36:36 \n   * @Desc: 绑定事件 \n   */\n\n\n  bindEvent() {\n    this.checkInNodes = throttle(this.checkInNodes, 500, this);\n    this.mindMap.on('mousedown', e => {\n      if (this.mindMap.opt.readonly) {\n        return;\n      }\n\n      if (!e.ctrlKey && e.which !== 3) {\n        return;\n      }\n\n      this.isMousedown = true;\n      let {\n        x,\n        y\n      } = this.mindMap.toPos(e.clientX, e.clientY);\n      this.mouseDownX = x;\n      this.mouseDownY = y;\n      this.createRect(x, y);\n    });\n    this.mindMap.on('mousemove', e => {\n      if (this.mindMap.opt.readonly) {\n        return;\n      }\n\n      if (!this.isMousedown) {\n        return;\n      }\n\n      let {\n        x,\n        y\n      } = this.mindMap.toPos(e.clientX, e.clientY);\n      this.mouseMoveX = x;\n      this.mouseMoveY = y;\n\n      if (Math.abs(x - this.mouseDownX) <= 10 && Math.abs(y - this.mouseDownY) <= 10) {\n        return;\n      }\n\n      clearTimeout(this.autoMoveTimer);\n      this.onMove(x, y);\n    });\n    this.mindMap.on('mouseup', e => {\n      if (this.mindMap.opt.readonly) {\n        return;\n      }\n\n      if (!this.isMousedown) {\n        return;\n      }\n\n      this.mindMap.emit('node_active', null, this.mindMap.renderer.activeNodeList);\n      clearTimeout(this.autoMoveTimer);\n      this.isMousedown = false;\n      if (this.rect) this.rect.remove();\n      this.rect = null;\n    });\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-07-13 07:55:49 \n   * @Desc: 鼠标移动事件\n   */\n\n\n  onMove(x, y) {\n    // 绘制矩形\n    this.rect.plot([[this.mouseDownX, this.mouseDownY], [this.mouseMoveX, this.mouseDownY], [this.mouseMoveX, this.mouseMoveY], [this.mouseDownX, this.mouseMoveY]]);\n    this.checkInNodes(); // 检测边缘移动\n\n    let step = this.mindMap.opt.selectTranslateStep;\n    let limit = this.mindMap.opt.selectTranslateLimit;\n    let count = 0; // 左边缘\n\n    if (x <= this.mindMap.elRect.left + limit) {\n      this.mouseDownX += step;\n      this.mindMap.view.translateX(step);\n      count++;\n    } // 右边缘\n\n\n    if (x >= this.mindMap.elRect.right - limit) {\n      this.mouseDownX -= step;\n      this.mindMap.view.translateX(-step);\n      count++;\n    } // 上边缘\n\n\n    if (y <= this.mindMap.elRect.top + limit) {\n      this.mouseDownY += step;\n      this.mindMap.view.translateY(step);\n      count++;\n    } // 下边缘\n\n\n    if (y >= this.mindMap.elRect.bottom - limit) {\n      this.mouseDownY -= step;\n      this.mindMap.view.translateY(-step);\n      count++;\n    }\n\n    if (count > 0) {\n      this.startAutoMove(x, y);\n    }\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-07-22 08:02:23 \n   * @Desc: 开启自动移动 \n   */\n\n\n  startAutoMove(x, y) {\n    this.autoMoveTimer = setTimeout(() => {\n      this.onMove(x, y);\n    }, 20);\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-07-11 10:19:37 \n   * @Desc: 创建矩形 \n   */\n\n\n  createRect(x, y) {\n    this.rect = this.mindMap.svg.polygon().stroke({\n      color: '#0984e3'\n    }).fill({\n      color: 'rgba(9,132,227,0.3)'\n    }).plot([[x, y]]);\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-07-11 10:20:43 \n   * @Desc: 检测在选区里的节点 \n   */\n\n\n  checkInNodes() {\n    let {\n      scaleX,\n      scaleY,\n      translateX,\n      translateY\n    } = this.mindMap.draw.transform();\n    let minx = Math.min(this.mouseDownX, this.mouseMoveX);\n    let miny = Math.min(this.mouseDownY, this.mouseMoveY);\n    let maxx = Math.max(this.mouseDownX, this.mouseMoveX);\n    let maxy = Math.max(this.mouseDownY, this.mouseMoveY);\n    bfsWalk(this.mindMap.renderer.root, node => {\n      let {\n        left,\n        top,\n        width,\n        height\n      } = node;\n      let right = (left + width) * scaleX + translateX;\n      let bottom = (top + height) * scaleY + translateY;\n      left = left * scaleX + translateX;\n      top = top * scaleY + translateY;\n\n      if (left >= minx && right <= maxx && top >= miny && bottom <= maxy) {\n        this.mindMap.batchExecution.push('activeNode' + node.uid, () => {\n          if (node.nodeData.data.isActive) {\n            return;\n          }\n\n          this.mindMap.renderer.setNodeActive(node, true);\n          this.mindMap.renderer.addActiveNode(node);\n        });\n      } else if (node.nodeData.data.isActive) {\n        this.mindMap.batchExecution.push('activeNode' + node.uid, () => {\n          if (!node.nodeData.data.isActive) {\n            return;\n          }\n\n          this.mindMap.renderer.setNodeActive(node, false);\n          this.mindMap.renderer.removeActiveNode(node);\n        });\n      }\n    });\n  }\n\n}\n\nexport default Select;","map":{"version":3,"names":["bfsWalk","throttle","Select","constructor","mindMap","rect","isMousedown","mouseDownX","mouseDownY","mouseMoveX","mouseMoveY","bindEvent","checkInNodes","on","e","opt","readonly","ctrlKey","which","x","y","toPos","clientX","clientY","createRect","Math","abs","clearTimeout","autoMoveTimer","onMove","emit","renderer","activeNodeList","remove","plot","step","selectTranslateStep","limit","selectTranslateLimit","count","elRect","left","view","translateX","right","top","translateY","bottom","startAutoMove","setTimeout","svg","polygon","stroke","color","fill","scaleX","scaleY","draw","transform","minx","min","miny","maxx","max","maxy","root","node","width","height","batchExecution","push","uid","nodeData","data","isActive","setNodeActive","addActiveNode","removeActiveNode"],"sources":["D:/新建文件夹/git项目/GinTest/vue/node_modules/simple-mind-map/src/Select.js"],"sourcesContent":["import { bfsWalk, throttle } from 'simple-mind-map/src/utils'\n\n/** \n * @Author: 王林 \n * @Date: 2021-07-10 22:34:51 \n * @Desc: 选择节点类 \n */\n\nclass Select {\n    /** \n     * @Author: 王林 \n     * @Date: 2021-07-10 22:35:16 \n     * @Desc: 构造函数 \n     */\n    constructor({ mindMap }) {\n        this.mindMap = mindMap\n        this.rect = null\n        this.isMousedown = false\n        this.mouseDownX = 0\n        this.mouseDownY = 0\n        this.mouseMoveX = 0\n        this.mouseMoveY = 0\n        this.bindEvent()\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-07-10 22:36:36 \n     * @Desc: 绑定事件 \n     */\n    bindEvent() {\n        this.checkInNodes = throttle(this.checkInNodes, 500, this)\n        this.mindMap.on('mousedown', (e) => {\n            if (this.mindMap.opt.readonly) {\n                return\n            }\n            if (!e.ctrlKey && e.which !== 3) {\n                return\n            }\n            this.isMousedown = true\n            let { x, y } = this.mindMap.toPos(e.clientX, e.clientY)\n            this.mouseDownX = x\n            this.mouseDownY = y\n            this.createRect(x, y)\n        })\n        this.mindMap.on('mousemove', (e) => {\n            if (this.mindMap.opt.readonly) {\n                return\n            }\n            if (!this.isMousedown) {\n                return\n            }\n            let { x, y } = this.mindMap.toPos(e.clientX, e.clientY)\n            this.mouseMoveX = x\n            this.mouseMoveY = y\n            if (Math.abs(x - this.mouseDownX) <= 10 && Math.abs(y - this.mouseDownY) <= 10) {\n                return\n            }\n            clearTimeout(this.autoMoveTimer)\n            this.onMove(x, y)\n        })\n        this.mindMap.on('mouseup', (e) => {\n            if (this.mindMap.opt.readonly) {\n                return\n            }\n            if (!this.isMousedown) {\n                return;\n            }\n            this.mindMap.emit('node_active', null, this.mindMap.renderer.activeNodeList)\n            clearTimeout(this.autoMoveTimer)\n            this.isMousedown = false\n            if (this.rect) this.rect.remove()\n            this.rect = null\n        })\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-07-13 07:55:49 \n     * @Desc: 鼠标移动事件\n     */\n    onMove (x, y) {\n        // 绘制矩形\n        this.rect.plot([\n            [this.mouseDownX, this.mouseDownY],\n            [this.mouseMoveX, this.mouseDownY],\n            [this.mouseMoveX, this.mouseMoveY],\n            [this.mouseDownX, this.mouseMoveY]\n        ])\n        this.checkInNodes()\n        // 检测边缘移动\n        let step = this.mindMap.opt.selectTranslateStep\n        let limit = this.mindMap.opt.selectTranslateLimit\n        let count = 0\n        // 左边缘\n        if (x <= this.mindMap.elRect.left + limit) {\n            this.mouseDownX += step\n            this.mindMap.view.translateX(step)\n            count++\n        }\n        // 右边缘\n        if (x >= this.mindMap.elRect.right - limit) {\n            this.mouseDownX -= step\n            this.mindMap.view.translateX(-step)\n            count++\n        }\n        // 上边缘\n        if (y <= this.mindMap.elRect.top + limit) {\n            this.mouseDownY += step\n            this.mindMap.view.translateY(step)\n            count++\n        }\n        // 下边缘\n        if (y >= this.mindMap.elRect.bottom - limit) {\n            this.mouseDownY -= step\n            this.mindMap.view.translateY(-step)\n            count++\n        }\n        if (count > 0) {\n            this.startAutoMove(x, y)\n        }\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-07-22 08:02:23 \n     * @Desc: 开启自动移动 \n     */\n    startAutoMove(x, y) {\n        this.autoMoveTimer = setTimeout(() => {\n            this.onMove(x, y)\n        }, 20);\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-07-11 10:19:37 \n     * @Desc: 创建矩形 \n     */\n    createRect(x, y) {\n        this.rect = this.mindMap.svg.polygon().stroke({\n            color: '#0984e3'\n        }).fill({\n            color: 'rgba(9,132,227,0.3)'\n        }).plot([[x, y]])\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-07-11 10:20:43 \n     * @Desc: 检测在选区里的节点 \n     */\n    checkInNodes() {\n        let { scaleX, scaleY, translateX, translateY } = this.mindMap.draw.transform()\n        let minx = Math.min(this.mouseDownX, this.mouseMoveX)\n        let miny = Math.min(this.mouseDownY, this.mouseMoveY)\n        let maxx = Math.max(this.mouseDownX, this.mouseMoveX)\n        let maxy = Math.max(this.mouseDownY, this.mouseMoveY)\n        bfsWalk(this.mindMap.renderer.root, (node) => {\n            let { left, top, width, height } = node\n            let right = (left + width) * scaleX + translateX\n            let bottom = (top + height) * scaleY + translateY\n            left = left * scaleX + translateX\n            top = top * scaleY + translateY\n            if (\n                left >= minx &&\n                right <= maxx &&\n                top >= miny &&\n                bottom <= maxy\n            ) {\n                this.mindMap.batchExecution.push('activeNode' + node.uid, () => {\n                    if (node.nodeData.data.isActive) {\n                        return ;\n                    }\n                    this.mindMap.renderer.setNodeActive(node, true)\n                    this.mindMap.renderer.addActiveNode(node)\n                })\n            } else if (node.nodeData.data.isActive) {\n                this.mindMap.batchExecution.push('activeNode' + node.uid, () => {\n                    if (!node.nodeData.data.isActive) {\n                        return ;\n                    }\n                    this.mindMap.renderer.setNodeActive(node, false)\n                    this.mindMap.renderer.removeActiveNode(node)\n                })\n            }\n        })\n    }\n}\n\nexport default Select"],"mappings":"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"},"metadata":{},"sourceType":"module"}