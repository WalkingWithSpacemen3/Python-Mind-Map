{"ast":null,"code":"/** \n * javascript comment \n * @Author: 王林25 \n * @Date: 2021-04-06 14:13:17 \n * @Desc: 深度优先遍历树 \n */\nexport const walk = (root, parent, beforeCallback, afterCallback, isRoot, layerIndex = 0, index = 0) => {\n  let stop = false;\n\n  if (beforeCallback) {\n    stop = beforeCallback(root, parent, isRoot, layerIndex, index);\n  }\n\n  if (!stop && root.children && root.children.length > 0) {\n    let _layerIndex = layerIndex + 1;\n\n    root.children.forEach((node, nodeIndex) => {\n      walk(node, root, beforeCallback, afterCallback, false, _layerIndex, nodeIndex);\n    });\n  }\n\n  afterCallback && afterCallback(root, parent, isRoot, layerIndex, index);\n};\n/** \n * javascript comment \n * @Author: 王林25 \n * @Date: 2021-04-07 18:47:20 \n * @Desc: 广度优先遍历树 \n */\n\nexport const bfsWalk = (root, callback) => {\n  callback(root);\n  let stack = [root];\n  let isStop = false;\n\n  while (stack.length) {\n    if (isStop) {\n      break;\n    }\n\n    let cur = stack.shift();\n\n    if (cur.children && cur.children.length) {\n      cur.children.forEach(item => {\n        stack.push(item);\n\n        if (callback(item) === 'stop') {\n          isStop = true;\n        }\n      });\n    }\n  }\n};\n/** \n * javascript comment \n * @Author: 王林25 \n * @Date: 2021-04-09 10:44:54 \n * @Desc: 缩放图片尺寸 \n */\n\nexport const resizeImgSize = (width, height, maxWidth, maxHeight) => {\n  let nRatio = width / height;\n  let arr = [];\n\n  if (maxWidth && maxHeight) {\n    if (width <= maxWidth && height <= maxHeight) {\n      arr = [width, height];\n    } else {\n      let mRatio = maxWidth / maxHeight;\n\n      if (nRatio > mRatio) {\n        // 固定高度\n        arr = [nRatio * maxHeight, maxHeight];\n      } else {\n        // 固定宽度\n        arr = [maxWidth, maxWidth / nRatio];\n      }\n    }\n  } else if (maxWidth) {\n    if (width <= maxWidth) {\n      arr = [width, height];\n    } else {\n      arr = [maxWidth, maxWidth / nRatio];\n    }\n  } else if (maxHeight) {\n    if (height <= maxHeight) {\n      arr = [width, height];\n    } else {\n      arr = [nRatio * maxHeight, maxHeight];\n    }\n  }\n\n  return arr;\n};\n/** \n * javascript comment \n * @Author: 王林25 \n * @Date: 2021-04-09 10:18:42 \n * @Desc: 缩放图片 \n */\n\nexport const resizeImg = (imgUrl, maxWidth, maxHeight) => {\n  return new Promise((resolve, reject) => {\n    let img = new Image();\n    img.src = imgUrl;\n\n    img.onload = () => {\n      let arr = resizeImgSize(img.naturalWidth, img.naturalHeight, maxWidth, maxHeight);\n      resolve(arr);\n    };\n\n    img.onerror = e => {\n      reject(e);\n    };\n  });\n};\n/** \n * @Author: 王林 \n * @Date: 2021-05-04 12:26:56 \n * @Desc: 从头html结构字符串里获取带换行符的字符串 \n */\n\nexport const getStrWithBrFromHtml = str => {\n  str = str.replace(/<br>/img, '\\n');\n  let el = document.createElement('div');\n  el.innerHTML = str;\n  str = el.textContent;\n  return str;\n};\n/** \n * @Author: 王林 \n * @Date: 2021-05-04 14:45:39 \n * @Desc: 极简的深拷贝 \n */\n\nexport const simpleDeepClone = data => {\n  try {\n    return JSON.parse(JSON.stringify(data));\n  } catch (error) {\n    return null;\n  }\n};\n/** \n * @Author: 王林 \n * @Date: 2021-05-04 14:40:11 \n * @Desc: 复制渲染树数据 \n */\n\nexport const copyRenderTree = (tree, root) => {\n  tree.data = simpleDeepClone(root.data);\n  tree.children = [];\n\n  if (root.children && root.children.length > 0) {\n    root.children.forEach((item, index) => {\n      tree.children[index] = copyRenderTree({}, item);\n    });\n  }\n\n  return tree;\n};\n/** \n * @Author: 王林 \n * @Date: 2021-05-04 14:40:11 \n * @Desc: 复制节点树数据 \n */\n\nexport const copyNodeTree = (tree, root) => {\n  tree.data = simpleDeepClone(root.nodeData.data); // tree.data.isActive = false\n\n  tree.children = [];\n\n  if (root.children && root.children.length > 0) {\n    root.children.forEach((item, index) => {\n      tree.children[index] = copyNodeTree({}, item);\n    });\n  }\n\n  return tree;\n};\n/** \n * @Author: 王林 \n * @Date: 2021-07-04 09:08:43 \n * @Desc: 图片转成dataURL \n */\n\nexport const imgToDataUrl = src => {\n  return new Promise((resolve, reject) => {\n    const img = new Image(); // 跨域图片需要添加这个属性，否则画布被污染了无法导出图片\n\n    img.setAttribute('crossOrigin', 'anonymous');\n\n    img.onload = () => {\n      try {\n        let canvas = document.createElement('canvas');\n        canvas.width = img.width;\n        canvas.height = img.height;\n        let ctx = canvas.getContext('2d'); // 图片绘制到canvas里\n\n        ctx.drawImage(img, 0, 0, img.width, img.height);\n        resolve(canvas.toDataURL());\n      } catch (e) {\n        reject(e);\n      }\n    };\n\n    img.onerror = e => {\n      reject(e);\n    };\n\n    img.src = src;\n  });\n};\n/** \n * @Author: 王林 \n * @Date: 2021-07-04 16:20:06 \n * @Desc: 下载文件 \n */\n\nexport const downloadFile = (file, fileName) => {\n  let a = document.createElement('a');\n  a.href = file;\n  a.download = fileName;\n  a.click();\n};\n/** \n * @Author: 王林 \n * @Date: 2021-07-11 10:36:47 \n * @Desc: 节流函数 \n */\n\nexport const throttle = (fn, time = 300, ctx) => {\n  let timer = null;\n  return () => {\n    if (timer) {\n      return;\n    }\n\n    timer = setTimeout(() => {\n      fn.call(ctx);\n      timer = null;\n    }, 300);\n  };\n};\n/** \n * javascript comment \n * @Author: 王林25 \n * @Date: 2021-07-12 10:27:36 \n * @Desc: 异步执行任务队列 \n */\n\nexport const asyncRun = (taskList, callback = () => {}) => {\n  let index = 0;\n  let len = taskList.length;\n\n  if (len <= 0) {\n    return callback();\n  }\n\n  let loop = () => {\n    if (index >= len) {\n      callback();\n      return;\n    }\n\n    taskList[index]();\n    setTimeout(() => {\n      index++;\n      loop();\n    }, 0);\n  };\n\n  loop();\n};","map":{"version":3,"names":["walk","root","parent","beforeCallback","afterCallback","isRoot","layerIndex","index","stop","children","length","_layerIndex","forEach","node","nodeIndex","bfsWalk","callback","stack","isStop","cur","shift","item","push","resizeImgSize","width","height","maxWidth","maxHeight","nRatio","arr","mRatio","resizeImg","imgUrl","Promise","resolve","reject","img","Image","src","onload","naturalWidth","naturalHeight","onerror","e","getStrWithBrFromHtml","str","replace","el","document","createElement","innerHTML","textContent","simpleDeepClone","data","JSON","parse","stringify","error","copyRenderTree","tree","copyNodeTree","nodeData","imgToDataUrl","setAttribute","canvas","ctx","getContext","drawImage","toDataURL","downloadFile","file","fileName","a","href","download","click","throttle","fn","time","timer","setTimeout","call","asyncRun","taskList","len","loop"],"sources":["C:/Users/13007/Documents/mindmap/node_modules/simple-mind-map/src/utils/index.js"],"sourcesContent":["/** \n * javascript comment \n * @Author: 王林25 \n * @Date: 2021-04-06 14:13:17 \n * @Desc: 深度优先遍历树 \n */\nexport const walk = (root, parent, beforeCallback, afterCallback, isRoot, layerIndex = 0, index = 0) => {\n    let stop = false\n    if (beforeCallback) {\n        stop = beforeCallback(root, parent, isRoot, layerIndex, index)\n    }\n    if (!stop && root.children && root.children.length > 0) {\n        let _layerIndex = layerIndex + 1\n        root.children.forEach((node, nodeIndex) => {\n            walk(node, root, beforeCallback, afterCallback, false, _layerIndex, nodeIndex)\n        })\n    }\n    afterCallback && afterCallback(root, parent, isRoot, layerIndex, index)\n}\n\n/** \n * javascript comment \n * @Author: 王林25 \n * @Date: 2021-04-07 18:47:20 \n * @Desc: 广度优先遍历树 \n */\nexport const bfsWalk = (root, callback) => {\n    callback(root)\n    let stack = [root]\n    let isStop = false\n    while (stack.length) {\n        if (isStop) {\n            break\n        }\n        let cur = stack.shift()\n        if (cur.children && cur.children.length) {\n            cur.children.forEach((item) => {\n                stack.push(item)\n                if(callback(item) === 'stop') {\n                    isStop = true\n                }\n            })\n        }\n    }\n}\n\n/** \n * javascript comment \n * @Author: 王林25 \n * @Date: 2021-04-09 10:44:54 \n * @Desc: 缩放图片尺寸 \n */\nexport const resizeImgSize = (width, height, maxWidth, maxHeight) => {\n    let nRatio = width / height\n    let arr = []\n    if (maxWidth && maxHeight) {\n        if (width <= maxWidth && height <= maxHeight) {\n            arr = [width, height]\n        } else {\n            let mRatio = maxWidth / maxHeight\n            if (nRatio > mRatio) { // 固定高度\n                arr = [nRatio * maxHeight, maxHeight]\n            } else { // 固定宽度\n                arr = [maxWidth, maxWidth / nRatio]\n            }\n        }\n    } else if (maxWidth) {\n        if (width <= maxWidth) {\n            arr = [width, height]\n        } else {\n            arr = [maxWidth, maxWidth / nRatio]\n        }\n    } else if (maxHeight) {\n        if (height <= maxHeight) {\n            arr = [width, height]\n        } else {\n            arr = [nRatio * maxHeight, maxHeight]\n        }\n    }\n    return arr\n}\n\n/** \n * javascript comment \n * @Author: 王林25 \n * @Date: 2021-04-09 10:18:42 \n * @Desc: 缩放图片 \n */\nexport const resizeImg = (imgUrl, maxWidth, maxHeight) => {\n    return new Promise((resolve, reject) => {\n        let img = new Image()\n        img.src = imgUrl\n        img.onload = () => {\n            let arr = resizeImgSize(img.naturalWidth, img.naturalHeight, maxWidth, maxHeight)\n            resolve(arr)\n        }\n        img.onerror = (e) => {\n            reject(e)\n        }\n    })\n}\n\n/** \n * @Author: 王林 \n * @Date: 2021-05-04 12:26:56 \n * @Desc: 从头html结构字符串里获取带换行符的字符串 \n */\nexport const getStrWithBrFromHtml = (str) => {\n    str = str.replace(/<br>/img, '\\n')\n    let el = document.createElement('div')\n    el.innerHTML = str\n    str = el.textContent\n    return str;\n}\n\n/** \n * @Author: 王林 \n * @Date: 2021-05-04 14:45:39 \n * @Desc: 极简的深拷贝 \n */\nexport const simpleDeepClone = (data) => {\n    try {\n        return JSON.parse(JSON.stringify(data))\n    } catch (error) {\n        return null\n    }\n}\n\n/** \n * @Author: 王林 \n * @Date: 2021-05-04 14:40:11 \n * @Desc: 复制渲染树数据 \n */\nexport const copyRenderTree = (tree, root) => {\n    tree.data = simpleDeepClone(root.data)\n    tree.children = []\n    if (root.children && root.children.length > 0) {\n        root.children.forEach((item, index) => {\n            tree.children[index] = copyRenderTree({}, item)\n        })\n    }\n    return tree;\n}\n\n/** \n * @Author: 王林 \n * @Date: 2021-05-04 14:40:11 \n * @Desc: 复制节点树数据 \n */\nexport const copyNodeTree = (tree, root) => {\n    tree.data = simpleDeepClone(root.nodeData.data)\n    // tree.data.isActive = false\n    tree.children = []\n    if (root.children && root.children.length > 0) {\n        root.children.forEach((item, index) => {\n            tree.children[index] = copyNodeTree({}, item)\n        })\n    }\n    return tree;\n}\n\n/** \n * @Author: 王林 \n * @Date: 2021-07-04 09:08:43 \n * @Desc: 图片转成dataURL \n */\nexport const imgToDataUrl = (src) => {\n    return new Promise((resolve, reject) => {\n        const img = new Image()\n        // 跨域图片需要添加这个属性，否则画布被污染了无法导出图片\n        img.setAttribute('crossOrigin', 'anonymous')\n        img.onload = () => {\n            try {\n                let canvas = document.createElement('canvas')\n                canvas.width = img.width\n                canvas.height = img.height\n                let ctx = canvas.getContext('2d')\n                // 图片绘制到canvas里\n                ctx.drawImage(img, 0, 0, img.width, img.height)\n                resolve(canvas.toDataURL())\n            } catch (e) {\n                reject(e)\n            }\n        }\n        img.onerror = (e) => {\n            reject(e)\n        }\n        img.src = src\n    });\n}\n\n/** \n * @Author: 王林 \n * @Date: 2021-07-04 16:20:06 \n * @Desc: 下载文件 \n */\nexport const downloadFile = (file, fileName) => {\n    let a = document.createElement('a')\n    a.href = file\n    a.download = fileName\n    a.click()\n}\n\n/** \n * @Author: 王林 \n * @Date: 2021-07-11 10:36:47 \n * @Desc: 节流函数 \n */\nexport const throttle = (fn, time = 300, ctx) => {\n    let timer = null\n    return () => {\n        if (timer) {\n            return\n        }\n        timer = setTimeout(() => {\n            fn.call(ctx)\n            timer = null\n        }, 300)\n    };\n}\n\n/** \n * javascript comment \n * @Author: 王林25 \n * @Date: 2021-07-12 10:27:36 \n * @Desc: 异步执行任务队列 \n */\nexport const asyncRun = (taskList, callback = () => {}) => {\n    let index = 0\n    let len = taskList.length\n    if (len <= 0) {\n        return callback()\n    }\n    let loop = () => {\n        if (index >= len) {\n            callback()\n            return\n        }\n        taskList[index]()\n        setTimeout(() => {\n            index++\n            loop()\n        }, 0)\n    }\n    loop()\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}