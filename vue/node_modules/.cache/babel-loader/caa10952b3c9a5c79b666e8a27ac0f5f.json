{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MindMap from 'simple-mind-map';\nimport { getData } from '@/api'; // import {PDFWorker as PDFJS} from \"pdfjs-dist\";\n\nconst pdfjsLib = require(\"pdfjs-dist/build/pdf\");\n\nconst pdfjsWorker = require(\"pdfjs-dist/build/pdf.worker.entry\");\n\nexport default {\n  name: 'HelloWorld',\n  props: ['index'],\n\n  data() {\n    return {\n      mindmapdata: null,\n      answerLink: '',\n      imgUrl: '1',\n      pdfLink: \"/Ch3_loop.pdf\",\n      drawer: false,\n      direction: 'rtl',\n      title: ''\n    };\n  },\n\n  mounted() {\n    this.getData();\n    this.init();\n  },\n\n  methods: {\n    getData() {\n      let storeData = getData();\n      this.mindMapData = storeData.python_trees[this.$props.index];\n    },\n\n    init() {\n      let {\n        root,\n        layout,\n        theme,\n        view\n      } = this.mindMapData;\n      this.mindMap = new MindMap({\n        el: document.getElementById('mindMapContainer'),\n        data: root,\n        layout: layout,\n        theme: 'diyColor',\n        themeConfig: theme.config,\n        viewData: view,\n        readonly: true\n      });\n      let themeConfig = this.mindMap.getCustomThemeConfig();\n      themeConfig.backgroundColor = '#2f2f32'; // this.mindMap.on('mousedown', (...args) => {\n      //     console.log(\"鼠标按下\")\n      //     this.mindMap.setTheme('diyColor')\n      //     console.log(\"this.mindMap.themeConfig\",this.mindMap.themeConfig)\n      //\n      //   })\n      // this.mindMap.on('node_mousedown', (data) => {\n      //   console.log(\"nodemousedown  data\",data)\n      //   //console.log(\"nodemousedown datae\",e)\n      // });\n      // this.mindMap.render()\n      // this.mindMap.view.translateX(-600);\n\n      this.mindMap.on('node_click', data => {\n        if (data.ableToClick === true) {\n          this.drawer = true;\n          this.title = data.nodeData.data.text;\n          this.answerLink = `/answer?ChapterID=${this.$props.index}TestID=${data.nodeData.data.testID}`; // this.showPdf(this.pdfLink);\n\n          console.log(\"node_click\", data);\n        }\n      });\n    } // showPdf(pdfPath) {\n    //   let _this = this;\n    //   let imgArr = [];\n    //   pdfjsLib.workerSrc = require('pdfjs-dist/build/pdf.worker');\n    //   // pdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n    //   let loadingTask = pdfjsLib.getDocument(pdfPath);\n    //   // PDFJS.workerSrc = 'pdf.worker.js';// pdfjsLib为undefined可以换成这行\n    //   // let loadingTask = PDFJS.getDocument(pdfPath);// pdfjsLib为undefined可以换成这行\n    //   loadingTask.promise.then(function (pdf) {\n    //     console.log('PDF loaded');\n    //     let pageNum = pdf.numPages;\n    //     // console.log(pageNum);\n    //     for (let i = 1; i <= pageNum; i++) {\n    //       pdf.getPage(i).then(function (page) {\n    //         console.log('Page loaded');\n    //\n    //         let scale = 1;\n    //         let viewport = page.getViewport(scale);\n    //\n    //         // let canvas = document.getElementById('the-canvas');\n    //         let canvas = document.createElement(\"canvas\");\n    //         let context = canvas.getContext('2d');\n    //         canvas.height = viewport.height;\n    //         canvas.width = viewport.width;\n    //\n    //         let renderContext = {\n    //           canvasContext: context,\n    //           viewport: viewport\n    //         };\n    //         let renderTask = page.render(renderContext);\n    //         renderTask.promise.then(function () {\n    //           console.log('Page rendered');\n    //           let imgUrl = canvas.toDataURL('image/jpeg'); //转换为base64\n    //           if (imgUrl) {\n    //             imgArr[i - 1] = imgUrl;\n    //           }\n    //           //pdf全部画完结束后操作\n    //           if (imgArr.length === pageNum && !isEmpty(imgArr)) {\n    //             // let canvas2 = document.createElement(\"canvas\");\n    //             let canvas2 = document.getElementById('the-canvas');\n    //             let context2 = canvas2.getContext('2d');\n    //             canvas2.height = viewport.height * pageNum;\n    //             canvas2.width = viewport.width;\n    //             let count = 0;\n    //             for (let j = 0; j < imgArr.length; j++) {\n    //               let IMG = new Image();\n    //               IMG.src = imgArr[j];\n    //               IMG.width = viewport.width;\n    //               IMG.height = viewport.height;\n    //               IMG.onload = function () {\n    //                 context2.drawImage(IMG, 0, viewport.height * j);\n    //                 count++;//确保所有img渲染结束后操作\n    //                 if (count === pageNum) {\n    //                   let canvas = document.getElementById('the-canvas');\n    //                   //赋值给img\n    //                   _this.imgUrl = canvas.toDataURL('image/jpeg');\n    //                   console.log('_this.imgUrl', _this.imgUrl);\n    //                 }\n    //               }\n    //             }\n    //           }\n    //         });\n    //       });\n    //     }\n    //   }, function (reason) {\n    //     console.error(reason);\n    //   });\n    //\n    //   function isEmpty(arr) {\n    //     for (let i = 0; i < arr.length; i++) {\n    //       if (!arr[i])\n    //         return true;\n    //     }\n    //     return false;\n    //   }\n    // }\n\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA,gC,CACA;;AAEA;;AACA;;AAEA;EACAA,kBADA;EAEAC,gBAFA;;EAGAC;IACA;MACAC,iBADA;MAEAC,cAFA;MAGAC,WAHA;MAIAC,wBAJA;MAKAC,aALA;MAMAC,gBANA;MAOAC;IAPA;EASA,CAbA;;EAcAC;IACA;IACA;EACA,CAjBA;;EAkBAC;IACAC;MACA;MACA;IACA,CAJA;;IAKAC;MACA;QAAAC;QAAAC;QAAAC;QAAAC;MAAA;MACA;QACAC,+CADA;QAEAhB,UAFA;QAGAa,cAHA;QAIAC,iBAJA;QAKAG,yBALA;QAMAC,cANA;QAOAC;MAPA;MASA;MACAF,wCAZA,CAaA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;UACA;UACA,8FAHA,CAKA;;UACAG;QACA;MACA,CATA;IAUA,CAxCA,CAyCA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EApHA;AAlBA","names":["name","props","data","mindmapdata","answerLink","imgUrl","pdfLink","drawer","direction","title","mounted","methods","getData","init","root","layout","theme","view","el","themeConfig","viewData","readonly","console"],"sourceRoot":"src/components","sources":["HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"editContainer\">\n      <div class=\"mindMapContainer\" id=\"mindMapContainer\"></div>\n      <mindmap height=\"50\" width=\"50%\"></mindmap>\n    </div>\n    <el-drawer\n        id=\"drawer\"\n        title=\"\"\n        :visible.sync=\"drawer\"\n        direction=\"rtl\"\n        :modal=\"false\"\n        :modal-append-to-body=\"false\"\n        size=\"20%\">\n      <span slot=\"title\" style=\"font-size: 30px; color:  #cccccc\">{{ title }}</span>\n      <div class=\"resourceBlock\">\n\n        <router-link rel=\"external nofollow\" target=\"_blank\" :to=\"pdfLink\">PDF资源\n          <!--<canvas id=\"the-canvas\" style=\"display: none\"></canvas>-->\n          <!--<img :src=\"imgUrl\" alt=\"pdf\" width=\"100%\" height=\"auto\">-->\n        </router-link>\n        <router-link :to=\"answerLink\" rel=\"external nofollow\" target=\"_blank\">习题</router-link>\n      </div>\n    </el-drawer>\n\n  </div>\n</template>\n<script>\nimport MindMap from 'simple-mind-map'\nimport {getData} from '@/api'\n// import {PDFWorker as PDFJS} from \"pdfjs-dist\";\n\nconst pdfjsLib = require(\"pdfjs-dist/build/pdf\");\nconst pdfjsWorker = require(\"pdfjs-dist/build/pdf.worker.entry\")\n\nexport default {\n  name: 'HelloWorld',\n  props: ['index'],\n  data() {\n    return {\n      mindmapdata: null,\n      answerLink: '',\n      imgUrl: '1',\n      pdfLink: \"/Ch3_loop.pdf\",\n      drawer: false,\n      direction: 'rtl',\n      title: ''\n    }\n  },\n  mounted() {\n    this.getData()\n    this.init()\n  },\n  methods: {\n    getData() {\n      let storeData = getData();\n      this.mindMapData = storeData.python_trees[this.$props.index];\n    },\n    init() {\n      let {root, layout, theme, view} = this.mindMapData;\n      this.mindMap = new MindMap({\n        el: document.getElementById('mindMapContainer'),\n        data: root,\n        layout: layout,\n        theme: 'diyColor',\n        themeConfig: theme.config,\n        viewData: view,\n        readonly: true\n      });\n      let themeConfig = this.mindMap.getCustomThemeConfig();\n      themeConfig.backgroundColor = '#2f2f32';\n      // this.mindMap.on('mousedown', (...args) => {\n      //     console.log(\"鼠标按下\")\n      //     this.mindMap.setTheme('diyColor')\n      //     console.log(\"this.mindMap.themeConfig\",this.mindMap.themeConfig)\n      //\n      //   })\n      // this.mindMap.on('node_mousedown', (data) => {\n      //   console.log(\"nodemousedown  data\",data)\n      //   //console.log(\"nodemousedown datae\",e)\n      // });\n      // this.mindMap.render()\n      // this.mindMap.view.translateX(-600);\n      this.mindMap.on('node_click', (data) => {\n        if (data.ableToClick === true) {\n          this.drawer = true;\n          this.title = data.nodeData.data.text;\n          this.answerLink = `/answer?ChapterID=${this.$props.index}TestID=${data.nodeData.data.testID}`;\n\n          // this.showPdf(this.pdfLink);\n          console.log(\"node_click\", data);\n        }\n      });\n    },\n    // showPdf(pdfPath) {\n    //   let _this = this;\n    //   let imgArr = [];\n    //   pdfjsLib.workerSrc = require('pdfjs-dist/build/pdf.worker');\n    //   // pdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n    //   let loadingTask = pdfjsLib.getDocument(pdfPath);\n    //   // PDFJS.workerSrc = 'pdf.worker.js';// pdfjsLib为undefined可以换成这行\n    //   // let loadingTask = PDFJS.getDocument(pdfPath);// pdfjsLib为undefined可以换成这行\n    //   loadingTask.promise.then(function (pdf) {\n    //     console.log('PDF loaded');\n    //     let pageNum = pdf.numPages;\n    //     // console.log(pageNum);\n    //     for (let i = 1; i <= pageNum; i++) {\n    //       pdf.getPage(i).then(function (page) {\n    //         console.log('Page loaded');\n    //\n    //         let scale = 1;\n    //         let viewport = page.getViewport(scale);\n    //\n    //         // let canvas = document.getElementById('the-canvas');\n    //         let canvas = document.createElement(\"canvas\");\n    //         let context = canvas.getContext('2d');\n    //         canvas.height = viewport.height;\n    //         canvas.width = viewport.width;\n    //\n    //         let renderContext = {\n    //           canvasContext: context,\n    //           viewport: viewport\n    //         };\n    //         let renderTask = page.render(renderContext);\n    //         renderTask.promise.then(function () {\n    //           console.log('Page rendered');\n    //           let imgUrl = canvas.toDataURL('image/jpeg'); //转换为base64\n    //           if (imgUrl) {\n    //             imgArr[i - 1] = imgUrl;\n    //           }\n    //           //pdf全部画完结束后操作\n    //           if (imgArr.length === pageNum && !isEmpty(imgArr)) {\n    //             // let canvas2 = document.createElement(\"canvas\");\n    //             let canvas2 = document.getElementById('the-canvas');\n    //             let context2 = canvas2.getContext('2d');\n    //             canvas2.height = viewport.height * pageNum;\n    //             canvas2.width = viewport.width;\n    //             let count = 0;\n    //             for (let j = 0; j < imgArr.length; j++) {\n    //               let IMG = new Image();\n    //               IMG.src = imgArr[j];\n    //               IMG.width = viewport.width;\n    //               IMG.height = viewport.height;\n    //               IMG.onload = function () {\n    //                 context2.drawImage(IMG, 0, viewport.height * j);\n    //                 count++;//确保所有img渲染结束后操作\n    //                 if (count === pageNum) {\n    //                   let canvas = document.getElementById('the-canvas');\n    //                   //赋值给img\n    //                   _this.imgUrl = canvas.toDataURL('image/jpeg');\n    //                   console.log('_this.imgUrl', _this.imgUrl);\n    //                 }\n    //               }\n    //             }\n    //           }\n    //         });\n    //       });\n    //     }\n    //   }, function (reason) {\n    //     console.error(reason);\n    //   });\n    //\n    //   function isEmpty(arr) {\n    //     for (let i = 0; i < arr.length; i++) {\n    //       if (!arr[i])\n    //         return true;\n    //     }\n    //     return false;\n    //   }\n    // }\n  }\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n<style lang=\"less\" scoped>\n.resourceBlock {\n  padding-left: 50px;\n  color: #42b983;\n  font-size: 30px;\n}\n\n.resourceBlock > a {\n  text-decoration: none;\n  margin-top: 30px;\n  display: block;\n}\n\n/deep/ .el-drawer.rtl {\n  border-radius: 20px;\n  background-color: #39393c;\n  width: 20%;\n}\n\n#drawer {\n  top: 70px;\n  bottom: 7px;\n}\n\n.courseName {\n  position: relative;\n  top: 5%;\n  left: 5%;\n  font-size: 40px;\n}\n\n.editContainer {\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background-color: #2c3e50;\n\n  .mindMapContainer {\n    position: absolute;\n    left: 0px;\n    top: 0px;\n    width: 100%;\n    height: 100%;\n  }\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}