{"ast":null,"code":"import exampleData from \"simple-mind-map/example/exampleData\";\nimport { simpleDeepClone } from 'simple-mind-map/src/utils/index';\nconst SIMPLE_MIND_MAP_DATA = 'SIMPLE_MIND_MAP_DATA';\n/** \n * @Author: 王林 \n * @Date: 2021-08-02 22:36:48 \n * @Desc: 克隆思维导图数据，去除激活状态 \n */\n\nconst copyMindMapTreeData = (tree, root) => {\n  tree.data = simpleDeepClone(root.data); // tree.data.isActive = false\n\n  tree.children = [];\n\n  if (root.children && root.children.length > 0) {\n    root.children.forEach((item, index) => {\n      tree.children[index] = copyMindMapTreeData({}, item);\n    });\n  }\n\n  return tree;\n};\n/** \n * @Author: 王林 \n * @Date: 2021-08-01 10:10:49 \n * @Desc: 获取缓存的思维导图数据 \n */\n\n\nexport const getData = () => {\n  let store = localStorage.getItem(SIMPLE_MIND_MAP_DATA);\n  console.log(\"localStorage.getItem(SIMPLE_MIND_MAP_DATA)\", store);\n\n  if (store === null) {\n    console.log(\"run simpleDeepClone(exampleData)\");\n    console.log(\"exampleData\", exampleData);\n    return simpleDeepClone(exampleData);\n  } else {\n    try {\n      console.log(\"donot run simpleDeepClone(exampleData)\");\n      return JSON.parse(store);\n    } catch (error) {\n      return simpleDeepClone(exampleData);\n    }\n  }\n};\n/** \n * @Author: 王林 \n * @Date: 2021-08-01 10:14:28 \n * @Desc: 存储思维导图数据 \n */\n\nexport const storeData = data => {\n  try {\n    let originData = getData();\n    originData.root = copyMindMapTreeData({}, data);\n    let dataStr = JSON.stringify(originData);\n    localStorage.setItem(SIMPLE_MIND_MAP_DATA, dataStr);\n  } catch (error) {\n    console.log(error);\n  }\n};\n/** \n * @Author: 王林 \n * @Date: 2021-08-01 10:24:56 \n * @Desc: 存储思维导图配置数据 \n */\n\nexport const storeConfig = config => {\n  try {\n    let originData = getData();\n    originData = { ...originData,\n      ...config\n    };\n    let dataStr = JSON.stringify(originData);\n    localStorage.setItem(SIMPLE_MIND_MAP_DATA, dataStr);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["exampleData","simpleDeepClone","SIMPLE_MIND_MAP_DATA","copyMindMapTreeData","tree","root","data","children","length","forEach","item","index","getData","store","localStorage","getItem","console","log","JSON","parse","error","storeData","originData","dataStr","stringify","setItem","storeConfig","config"],"sources":["D:/aimeelina/python/mindmap/src/api/index.js"],"sourcesContent":["import exampleData from \"simple-mind-map/example/exampleData\"\nimport { simpleDeepClone } from 'simple-mind-map/src/utils/index'\n\nconst SIMPLE_MIND_MAP_DATA = 'SIMPLE_MIND_MAP_DATA'\n\n/** \n * @Author: 王林 \n * @Date: 2021-08-02 22:36:48 \n * @Desc: 克隆思维导图数据，去除激活状态 \n */\nconst copyMindMapTreeData = (tree, root) => {\n    tree.data = simpleDeepClone(root.data)\n    // tree.data.isActive = false\n    tree.children = []\n    if (root.children && root.children.length > 0) {\n        root.children.forEach((item, index) => {\n            tree.children[index] = copyMindMapTreeData({}, item)\n        })\n    }\n    return tree;\n}\n\n/** \n * @Author: 王林 \n * @Date: 2021-08-01 10:10:49 \n * @Desc: 获取缓存的思维导图数据 \n */\nexport const getData = () => {\n    let store = localStorage.getItem(SIMPLE_MIND_MAP_DATA)\n    console.log(\"localStorage.getItem(SIMPLE_MIND_MAP_DATA)\",store)\n    if (store === null) {\n        console.log(\"run simpleDeepClone(exampleData)\")\n        console.log(\"exampleData\",exampleData)\n        return simpleDeepClone(exampleData)\n    } else {\n        try {\n            console.log(\"donot run simpleDeepClone(exampleData)\")\n            return JSON.parse(store)\n        } catch (error) {\n            return simpleDeepClone(exampleData)\n        }\n    }\n}\n\n/** \n * @Author: 王林 \n * @Date: 2021-08-01 10:14:28 \n * @Desc: 存储思维导图数据 \n */\nexport const storeData = (data) => {\n    try {\n        let originData = getData()\n        originData.root = copyMindMapTreeData({}, data)\n        let dataStr = JSON.stringify(originData)\n        localStorage.setItem(SIMPLE_MIND_MAP_DATA, dataStr)\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n/** \n * @Author: 王林 \n * @Date: 2021-08-01 10:24:56 \n * @Desc: 存储思维导图配置数据 \n */\nexport const storeConfig = (config) => {\n    try {\n        let originData = getData()\n        originData = {\n            ...originData,\n            ...config\n        }\n        let dataStr = JSON.stringify(originData)\n        localStorage.setItem(SIMPLE_MIND_MAP_DATA, dataStr)\n    } catch (error) {\n        console.log(error)\n    }\n}"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,qCAAxB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AAEA,MAAMC,oBAAoB,GAAG,sBAA7B;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,mBAAmB,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;EACxCD,IAAI,CAACE,IAAL,GAAYL,eAAe,CAACI,IAAI,CAACC,IAAN,CAA3B,CADwC,CAExC;;EACAF,IAAI,CAACG,QAAL,GAAgB,EAAhB;;EACA,IAAIF,IAAI,CAACE,QAAL,IAAiBF,IAAI,CAACE,QAAL,CAAcC,MAAd,GAAuB,CAA5C,EAA+C;IAC3CH,IAAI,CAACE,QAAL,CAAcE,OAAd,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAiB;MACnCP,IAAI,CAACG,QAAL,CAAcI,KAAd,IAAuBR,mBAAmB,CAAC,EAAD,EAAKO,IAAL,CAA1C;IACH,CAFD;EAGH;;EACD,OAAON,IAAP;AACH,CAVD;AAYA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMQ,OAAO,GAAG,MAAM;EACzB,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBb,oBAArB,CAAZ;EACAc,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAAyDJ,KAAzD;;EACA,IAAIA,KAAK,KAAK,IAAd,EAAoB;IAChBG,OAAO,CAACC,GAAR,CAAY,kCAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BjB,WAA1B;IACA,OAAOC,eAAe,CAACD,WAAD,CAAtB;EACH,CAJD,MAIO;IACH,IAAI;MACAgB,OAAO,CAACC,GAAR,CAAY,wCAAZ;MACA,OAAOC,IAAI,CAACC,KAAL,CAAWN,KAAX,CAAP;IACH,CAHD,CAGE,OAAOO,KAAP,EAAc;MACZ,OAAOnB,eAAe,CAACD,WAAD,CAAtB;IACH;EACJ;AACJ,CAfM;AAiBP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMqB,SAAS,GAAIf,IAAD,IAAU;EAC/B,IAAI;IACA,IAAIgB,UAAU,GAAGV,OAAO,EAAxB;IACAU,UAAU,CAACjB,IAAX,GAAkBF,mBAAmB,CAAC,EAAD,EAAKG,IAAL,CAArC;IACA,IAAIiB,OAAO,GAAGL,IAAI,CAACM,SAAL,CAAeF,UAAf,CAAd;IACAR,YAAY,CAACW,OAAb,CAAqBvB,oBAArB,EAA2CqB,OAA3C;EACH,CALD,CAKE,OAAOH,KAAP,EAAc;IACZJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;EACH;AACJ,CATM;AAWP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMM,WAAW,GAAIC,MAAD,IAAY;EACnC,IAAI;IACA,IAAIL,UAAU,GAAGV,OAAO,EAAxB;IACAU,UAAU,GAAG,EACT,GAAGA,UADM;MAET,GAAGK;IAFM,CAAb;IAIA,IAAIJ,OAAO,GAAGL,IAAI,CAACM,SAAL,CAAeF,UAAf,CAAd;IACAR,YAAY,CAACW,OAAb,CAAqBvB,oBAArB,EAA2CqB,OAA3C;EACH,CARD,CAQE,OAAOH,KAAP,EAAc;IACZJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;EACH;AACJ,CAZM"},"metadata":{},"sourceType":"module"}