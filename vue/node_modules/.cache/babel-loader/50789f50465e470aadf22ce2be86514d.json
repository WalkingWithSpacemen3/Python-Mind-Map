{"ast":null,"code":"import { getStrWithBrFromHtml } from 'simple-mind-map/src/utils';\n/** \r\n * javascript comment \r\n * @Author: 王林25 \r\n * @Date: 2021-06-19 11:11:28 \r\n * @Desc: 节点文字编辑类 \r\n */\n\nexport default class TextEdit {\n  /** \r\n   * javascript comment \r\n   * @Author: 王林25 \r\n   * @Date: 2021-06-19 11:22:57 \r\n   * @Desc: 构造函数 \r\n   */\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.mindMap = renderer.mindMap; // 文本编辑框\n\n    this.textEditNode = null; // 文本编辑框是否显示\n\n    this.showTextEdit = false;\n    this.bindEvent();\n  }\n  /** \r\n   * @Author: 王林 \r\n   * @Date: 2021-04-24 13:27:04 \r\n   * @Desc: 事件 \r\n   */\n\n\n  bindEvent() {\n    this.show = this.show.bind(this); // 节点双击事件\n\n    this.mindMap.on('node_dblclick', this.show); // 点击事件\n\n    this.mindMap.on('draw_click', () => {\n      // 隐藏文本编辑框\n      this.hideEditTextBox();\n    }); // 展开收缩按钮点击事件\n\n    this.mindMap.on('expand_btn_click', () => {\n      this.hideEditTextBox();\n    }); // 节点激活前事件\n\n    this.mindMap.on('before_node_active', () => {\n      this.hideEditTextBox();\n    }); // 注册编辑快捷键\n\n    this.mindMap.keyCommand.addShortcut('F2', () => {\n      if (this.renderer.activeNodeList.length <= 0) {\n        return;\n      }\n\n      this.show(this.renderer.activeNodeList[0]);\n    });\n  }\n  /** \r\n   * javascript comment \r\n   * @Author: 王林25 \r\n   * @Date: 2022-08-16 16:27:02 \r\n   * @Desc: 注册临时快捷键 \r\n   */\n\n\n  registerTmpShortcut() {\n    // 注册回车快捷键\n    this.mindMap.keyCommand.addShortcut('Enter', () => {\n      this.hideEditTextBox();\n    });\n  }\n  /** \r\n   * @Author: 王林 \r\n   * @Date: 2021-04-13 22:15:56 \r\n   * @Desc: 显示文本编辑框 \r\n   */\n\n\n  show(node) {\n    this.showEditTextBox(node, node._textData.node.node.getBoundingClientRect());\n  }\n  /** \r\n   * @Author: 王林 \r\n   * @Date: 2021-04-13 22:13:02 \r\n   * @Desc: 显示文本编辑框 \r\n   */\n\n\n  showEditTextBox(node, rect) {\n    this.mindMap.emit('before_show_text_edit');\n    this.registerTmpShortcut();\n\n    if (!this.textEditNode) {\n      this.textEditNode = document.createElement('div');\n      this.textEditNode.style.cssText = `position:fixed;box-sizing: border-box;background-color:#fff;box-shadow: 0 0 20px rgba(0,0,0,.5);padding: 3px 5px;margin-left: -5px;margin-top: -3px;outline: none;`;\n      this.textEditNode.setAttribute('contenteditable', true);\n      document.body.appendChild(this.textEditNode);\n    }\n\n    node.style.domText(this.textEditNode, this.mindMap.view.scale);\n    this.textEditNode.innerHTML = node.nodeData.data.text.split(/\\n/img).join('<br>');\n    this.textEditNode.style.minWidth = rect.width + 10 + 'px';\n    this.textEditNode.style.minHeight = rect.height + 6 + 'px';\n    this.textEditNode.style.left = rect.left + 'px';\n    this.textEditNode.style.top = rect.top + 'px';\n    this.textEditNode.style.display = 'block';\n    this.showTextEdit = true; // 选中文本\n\n    this.selectNodeText();\n  }\n  /** \r\n   * @Author: 王林 \r\n   * @Date: 2021-08-02 23:13:50 \r\n   * @Desc: 选中文本 \r\n   */\n\n\n  selectNodeText() {\n    let selection = window.getSelection();\n    let range = document.createRange();\n    range.selectNodeContents(this.textEditNode);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n  /** \r\n   * @Author: 王林 \r\n   * @Date: 2021-04-24 13:48:16 \r\n   * @Desc: 隐藏文本编辑框 \r\n   */\n\n\n  hideEditTextBox() {\n    if (!this.showTextEdit) {\n      return;\n    }\n\n    this.renderer.activeNodeList.forEach(node => {\n      let str = getStrWithBrFromHtml(this.textEditNode.innerHTML);\n      this.mindMap.execCommand('SET_NODE_TEXT', node, str);\n\n      if (node.isGeneralization) {\n        // 概要节点\n        node.generalizationBelongNode.updateGeneralization();\n      }\n\n      this.mindMap.render();\n    });\n    this.mindMap.emit('hide_text_edit', this.textEditNode, this.renderer.activeNodeList);\n    this.textEditNode.style.display = 'none';\n    this.textEditNode.innerHTML = '';\n    this.textEditNode.style.fontFamily = 'inherit';\n    this.textEditNode.style.fontSize = 'inherit';\n    this.textEditNode.style.fontWeight = 'normal';\n    this.showTextEdit = false;\n  }\n\n}","map":{"version":3,"names":["getStrWithBrFromHtml","TextEdit","constructor","renderer","mindMap","textEditNode","showTextEdit","bindEvent","show","bind","on","hideEditTextBox","keyCommand","addShortcut","activeNodeList","length","registerTmpShortcut","node","showEditTextBox","_textData","getBoundingClientRect","rect","emit","document","createElement","style","cssText","setAttribute","body","appendChild","domText","view","scale","innerHTML","nodeData","data","text","split","join","minWidth","width","minHeight","height","left","top","display","selectNodeText","selection","window","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","forEach","str","execCommand","isGeneralization","generalizationBelongNode","updateGeneralization","render","fontFamily","fontSize","fontWeight"],"sources":["C:/Users/13007/Documents/GinTest/vue/node_modules/simple-mind-map/src/TextEdit.js"],"sourcesContent":["import {\r\n    getStrWithBrFromHtml\r\n} from 'simple-mind-map/src/utils'\r\n\r\n/** \r\n * javascript comment \r\n * @Author: 王林25 \r\n * @Date: 2021-06-19 11:11:28 \r\n * @Desc: 节点文字编辑类 \r\n */\r\nexport default class TextEdit {\r\n    /** \r\n     * javascript comment \r\n     * @Author: 王林25 \r\n     * @Date: 2021-06-19 11:22:57 \r\n     * @Desc: 构造函数 \r\n     */\r\n    constructor(renderer) {\r\n        this.renderer = renderer\r\n        this.mindMap = renderer.mindMap\r\n        // 文本编辑框\r\n        this.textEditNode = null\r\n        // 文本编辑框是否显示\r\n        this.showTextEdit = false\r\n        this.bindEvent()\r\n    }\r\n\r\n    /** \r\n     * @Author: 王林 \r\n     * @Date: 2021-04-24 13:27:04 \r\n     * @Desc: 事件 \r\n     */\r\n    bindEvent() {\r\n        this.show = this.show.bind(this)\r\n        // 节点双击事件\r\n        this.mindMap.on('node_dblclick', this.show)\r\n        // 点击事件\r\n        this.mindMap.on('draw_click', () => {\r\n            // 隐藏文本编辑框\r\n            this.hideEditTextBox()\r\n        })\r\n        // 展开收缩按钮点击事件\r\n        this.mindMap.on('expand_btn_click', () => {\r\n            this.hideEditTextBox()\r\n        })\r\n        // 节点激活前事件\r\n        this.mindMap.on('before_node_active', () => {\r\n            this.hideEditTextBox()\r\n        })\r\n        // 注册编辑快捷键\r\n        this.mindMap.keyCommand.addShortcut('F2', () => {\r\n            if (this.renderer.activeNodeList.length <= 0) {\r\n                return\r\n            }\r\n            this.show(this.renderer.activeNodeList[0])\r\n        })\r\n    }\r\n\r\n    /** \r\n     * javascript comment \r\n     * @Author: 王林25 \r\n     * @Date: 2022-08-16 16:27:02 \r\n     * @Desc: 注册临时快捷键 \r\n     */\r\n    registerTmpShortcut() {\r\n        // 注册回车快捷键\r\n        this.mindMap.keyCommand.addShortcut('Enter', () => {\r\n            this.hideEditTextBox()\r\n        })\r\n    }\r\n\r\n    /** \r\n     * @Author: 王林 \r\n     * @Date: 2021-04-13 22:15:56 \r\n     * @Desc: 显示文本编辑框 \r\n     */\r\n    show(node) {\r\n        this.showEditTextBox(node, node._textData.node.node.getBoundingClientRect())\r\n    }\r\n\r\n    /** \r\n     * @Author: 王林 \r\n     * @Date: 2021-04-13 22:13:02 \r\n     * @Desc: 显示文本编辑框 \r\n     */\r\n    showEditTextBox(node, rect) {\r\n        this.mindMap.emit('before_show_text_edit')\r\n        this.registerTmpShortcut()\r\n        if (!this.textEditNode) {\r\n            this.textEditNode = document.createElement('div')\r\n            this.textEditNode.style.cssText = `position:fixed;box-sizing: border-box;background-color:#fff;box-shadow: 0 0 20px rgba(0,0,0,.5);padding: 3px 5px;margin-left: -5px;margin-top: -3px;outline: none;`\r\n            this.textEditNode.setAttribute('contenteditable', true)\r\n            document.body.appendChild(this.textEditNode)\r\n        }\r\n        node.style.domText(this.textEditNode, this.mindMap.view.scale)\r\n        this.textEditNode.innerHTML = node.nodeData.data.text.split(/\\n/img).join('<br>')\r\n        this.textEditNode.style.minWidth = rect.width + 10 + 'px'\r\n        this.textEditNode.style.minHeight = rect.height + 6 + 'px'\r\n        this.textEditNode.style.left = rect.left + 'px'\r\n        this.textEditNode.style.top = rect.top + 'px'\r\n        this.textEditNode.style.display = 'block'\r\n        this.showTextEdit = true\r\n        // 选中文本\r\n        this.selectNodeText()\r\n    }\r\n\r\n    /** \r\n     * @Author: 王林 \r\n     * @Date: 2021-08-02 23:13:50 \r\n     * @Desc: 选中文本 \r\n     */\r\n    selectNodeText() {\r\n        let selection = window.getSelection()\r\n        let range = document.createRange()\r\n        range.selectNodeContents(this.textEditNode)\r\n        selection.removeAllRanges()\r\n        selection.addRange(range)\r\n    }\r\n\r\n    /** \r\n     * @Author: 王林 \r\n     * @Date: 2021-04-24 13:48:16 \r\n     * @Desc: 隐藏文本编辑框 \r\n     */\r\n    hideEditTextBox() {\r\n        if (!this.showTextEdit) {\r\n            return\r\n        }\r\n        this.renderer.activeNodeList.forEach((node) => {\r\n            let str = getStrWithBrFromHtml(this.textEditNode.innerHTML)\r\n            this.mindMap.execCommand('SET_NODE_TEXT', node, str)\r\n            if (node.isGeneralization) {\r\n                // 概要节点\r\n                node.generalizationBelongNode.updateGeneralization()\r\n            }\r\n            this.mindMap.render()\r\n        })\r\n        this.mindMap.emit('hide_text_edit', this.textEditNode, this.renderer.activeNodeList)\r\n        this.textEditNode.style.display = 'none'\r\n        this.textEditNode.innerHTML = ''\r\n        this.textEditNode.style.fontFamily = 'inherit'\r\n        this.textEditNode.style.fontSize = 'inherit'\r\n        this.textEditNode.style.fontWeight = 'normal'\r\n        this.showTextEdit = false\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}