{"ast":null,"code":"/** \n * @Author: 王林 \n * @Date: 2022-08-22 21:32:50 \n * @Desc: 节点形状类 \n */\nexport default class Shape {\n  constructor(node) {\n    this.node = node;\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2022-08-17 22:32:32 \n   * @Desc: 形状需要的padding \n   */\n\n\n  getShapePadding(width, height, paddingX, paddingY) {\n    const shape = this.node.getShape();\n    const defaultPaddingX = 15;\n    const defaultPaddingY = 5;\n    const actWidth = width + paddingX * 2;\n    const actHeight = height + paddingY * 2;\n    const actOffset = Math.abs(actWidth - actHeight);\n\n    switch (shape) {\n      case 'roundedRectangle':\n        return {\n          paddingX: height > width ? (height - width) / 2 : 0,\n          paddingY: 0\n        };\n\n      case 'diamond':\n        return {\n          paddingX: width / 2,\n          paddingY: height / 2\n        };\n\n      case 'parallelogram':\n        return {\n          paddingX: paddingX <= 0 ? defaultPaddingX : 0,\n          paddingY: 0\n        };\n\n      case 'outerTriangularRectangle':\n        return {\n          paddingX: paddingX <= 0 ? defaultPaddingX : 0,\n          paddingY: 0\n        };\n\n      case 'innerTriangularRectangle':\n        return {\n          paddingX: paddingX <= 0 ? defaultPaddingX : 0,\n          paddingY: 0\n        };\n\n      case 'ellipse':\n        return {\n          paddingX: paddingX <= 0 ? defaultPaddingX : 0,\n          paddingY: paddingY <= 0 ? defaultPaddingY : 0\n        };\n\n      case 'circle':\n        return {\n          paddingX: actHeight > actWidth ? actOffset / 2 : 0,\n          paddingY: actHeight < actWidth ? actOffset / 2 : 0\n        };\n\n      default:\n        return {\n          paddingX: 0,\n          paddingY: 0\n        };\n    }\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2022-08-17 22:22:53 \n   * @Desc: 创建形状节点 \n   */\n\n\n  createShape() {\n    const shape = this.node.getShape();\n    let {\n      width,\n      height\n    } = this.node;\n    let node = null; // 矩形\n\n    if (shape === 'rectangle') {\n      node = this.node.group.rect(width, height);\n    } else if (shape === 'diamond') {\n      // 菱形\n      node = this.createDiamond();\n    } else if (shape === 'parallelogram') {\n      // 平行四边形\n      node = this.createParallelogram();\n    } else if (shape === 'roundedRectangle') {\n      // 圆角矩形\n      node = this.createRoundedRectangle();\n    } else if (shape === 'octagonalRectangle') {\n      // 八角矩形\n      node = this.createOctagonalRectangle();\n    } else if (shape === 'outerTriangularRectangle') {\n      // 外三角矩形\n      node = this.createOuterTriangularRectangle();\n    } else if (shape === 'innerTriangularRectangle') {\n      // 内三角矩形\n      node = this.createInnerTriangularRectangle();\n    } else if (shape === 'ellipse') {\n      // 椭圆\n      node = this.createEllipse();\n    } else if (shape === 'circle') {\n      // 圆\n      node = this.createCircle();\n    }\n\n    return node;\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2022-09-04 09:08:54 \n   * @Desc: 创建菱形 \n   */\n\n\n  createDiamond() {\n    let {\n      width,\n      height\n    } = this.node;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n    let topX = halfWidth;\n    let topY = 0;\n    let rightX = width;\n    let rightY = halfHeight;\n    let bottomX = halfWidth;\n    let bottomY = height;\n    let leftX = 0;\n    let leftY = halfHeight;\n    return this.node.group.polygon(`\n            ${topX}, ${topY}\n            ${rightX}, ${rightY}\n            ${bottomX}, ${bottomY}\n            ${leftX}, ${leftY}\n        `);\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2022-09-03 16:14:12 \n   * @Desc: 创建平行四边形 \n   */\n\n\n  createParallelogram() {\n    let {\n      paddingX\n    } = this.node.getPaddingVale();\n    paddingX = paddingX || this.node.shapePadding.paddingX;\n    let {\n      width,\n      height\n    } = this.node;\n    return this.node.group.polygon(`\n            ${paddingX}, ${0}\n            ${width}, ${0}\n            ${width - paddingX}, ${height}\n            ${0}, ${height}\n        `);\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2022-09-03 16:50:23 \n   * @Desc: 创建圆角矩形 \n   */\n\n\n  createRoundedRectangle() {\n    let {\n      width,\n      height\n    } = this.node;\n    let halfHeight = height / 2;\n    return this.node.group.path(`\n            M${halfHeight},0\n            L${width - halfHeight},0\n            A${height / 2},${height / 2} 0 0,1 ${width - halfHeight},${height} \n            L${halfHeight},${height}\n            A${height / 2},${height / 2} 0 0,1 ${halfHeight},${0}\n        `);\n  }\n  /** \n   * javascript comment \n   * @Author: 王林 \n   * @Date: 2022-09-12 16:14:08 \n   * @Desc: 创建八角矩形 \n   */\n\n\n  createOctagonalRectangle() {\n    let w = 5;\n    let {\n      width,\n      height\n    } = this.node;\n    return this.node.group.polygon(`\n            ${0}, ${w}\n            ${w}, ${0}\n            ${width - w}, ${0}\n            ${width}, ${w}\n            ${width}, ${height - w}\n            ${width - w}, ${height}\n            ${w}, ${height}\n            ${0}, ${height - w}\n        `);\n  }\n  /** \n   * javascript comment \n   * @Author: 王林 \n   * @Date: 2022-09-12 20:55:50 \n   * @Desc: 创建外三角矩形 \n   */\n\n\n  createOuterTriangularRectangle() {\n    let {\n      paddingX\n    } = this.node.getPaddingVale();\n    paddingX = paddingX || this.node.shapePadding.paddingX;\n    let {\n      width,\n      height\n    } = this.node;\n    return this.node.group.polygon(`\n            ${paddingX}, ${0}\n            ${width - paddingX}, ${0}\n            ${width}, ${height / 2}\n            ${width - paddingX}, ${height}\n            ${paddingX}, ${height}\n            ${0}, ${height / 2}\n        `);\n  }\n  /** \n   * javascript comment \n   * @Author: 王林 \n   * @Date: 2022-09-12 20:59:37 \n   * @Desc: 创建内三角矩形 \n   */\n\n\n  createInnerTriangularRectangle() {\n    let {\n      paddingX\n    } = this.node.getPaddingVale();\n    paddingX = paddingX || this.node.shapePadding.paddingX;\n    let {\n      width,\n      height\n    } = this.node;\n    return this.node.group.polygon(`\n            ${0}, ${0}\n            ${width}, ${0}\n            ${width - paddingX / 2}, ${height / 2}\n            ${width}, ${height}\n            ${0}, ${height}\n            ${paddingX / 2}, ${height / 2}\n        `);\n  }\n  /** \n   * javascript comment \n   * @Author: 王林 \n   * @Date: 2022-09-12 21:06:31 \n   * @Desc: 创建椭圆 \n   */\n\n\n  createEllipse() {\n    let {\n      width,\n      height\n    } = this.node;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n    return this.node.group.path(`\n            M${halfWidth},0\n            A${halfWidth},${halfHeight} 0 0,1 ${halfWidth},${height} \n            M${halfWidth},${height} \n            A${halfWidth},${halfHeight} 0 0,1 ${halfWidth},${0} \n        `);\n  }\n  /** \n   * javascript comment \n   * @Author: 王林 \n   * @Date: 2022-09-12 21:14:04 \n   * @Desc: 创建圆 \n   */\n\n\n  createCircle() {\n    let {\n      width,\n      height\n    } = this.node;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n    return this.node.group.path(`\n            M${halfWidth},0\n            A${halfWidth},${halfHeight} 0 0,1 ${halfWidth},${height} \n            M${halfWidth},${height} \n            A${halfWidth},${halfHeight} 0 0,1 ${halfWidth},${0} \n        `);\n  }\n\n} // 形状列表\n\nexport const shapeList = ['rectangle', 'diamond', 'parallelogram', 'roundedRectangle', 'octagonalRectangle', 'outerTriangularRectangle', 'innerTriangularRectangle', 'ellipse', 'circle'];","map":{"version":3,"names":["Shape","constructor","node","getShapePadding","width","height","paddingX","paddingY","shape","getShape","defaultPaddingX","defaultPaddingY","actWidth","actHeight","actOffset","Math","abs","createShape","group","rect","createDiamond","createParallelogram","createRoundedRectangle","createOctagonalRectangle","createOuterTriangularRectangle","createInnerTriangularRectangle","createEllipse","createCircle","halfWidth","halfHeight","topX","topY","rightX","rightY","bottomX","bottomY","leftX","leftY","polygon","getPaddingVale","shapePadding","path","w","shapeList"],"sources":["D:/新建文件夹/git项目/GinTest/vue/node_modules/simple-mind-map/src/Shape.js"],"sourcesContent":["/** \n * @Author: 王林 \n * @Date: 2022-08-22 21:32:50 \n * @Desc: 节点形状类 \n */\n export default class Shape {\n    constructor(node) {\n        this.node = node\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2022-08-17 22:32:32 \n     * @Desc: 形状需要的padding \n     */\n    getShapePadding(width, height, paddingX, paddingY) {\n        const shape = this.node.getShape()\n        const defaultPaddingX = 15\n        const defaultPaddingY = 5\n        const actWidth = width + paddingX * 2\n        const actHeight = height + paddingY * 2\n        const actOffset = Math.abs(actWidth - actHeight)\n        switch (shape) {\n            case 'roundedRectangle':\n                return {\n                    paddingX: height > width ? (height - width) / 2 : 0,\n                    paddingY: 0\n                }  \n            case 'diamond':\n                return {\n                    paddingX: width / 2,\n                    paddingY: height / 2\n                }\n            case 'parallelogram':\n                return {\n                    paddingX: paddingX <= 0 ? defaultPaddingX : 0,\n                    paddingY: 0\n                }\n            case 'outerTriangularRectangle':\n                return {\n                    paddingX: paddingX <= 0 ? defaultPaddingX : 0,\n                    paddingY: 0\n                }\n            case 'innerTriangularRectangle':\n                return {\n                    paddingX: paddingX <= 0 ? defaultPaddingX : 0,\n                    paddingY: 0\n                }\n            case 'ellipse':\n                return {\n                    paddingX: paddingX <= 0 ? defaultPaddingX : 0,\n                    paddingY: paddingY <= 0 ? defaultPaddingY : 0\n                }\n            case 'circle':\n                return {\n                    paddingX: actHeight > actWidth ? actOffset / 2 : 0,\n                    paddingY: actHeight < actWidth ? actOffset / 2 : 0,\n                }\n            default:\n                return {\n                    paddingX: 0,\n                    paddingY: 0\n                }\n        }\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2022-08-17 22:22:53 \n     * @Desc: 创建形状节点 \n     */\n    createShape() {\n        const shape = this.node.getShape()\n        let { width, height } = this.node\n        let node = null\n        // 矩形\n        if (shape === 'rectangle') {\n            node = this.node.group.rect(width, height)\n        } else if (shape === 'diamond') {\n            // 菱形\n            node = this.createDiamond()\n        } else if (shape === 'parallelogram') {\n            // 平行四边形\n            node = this.createParallelogram()\n        } else if (shape === 'roundedRectangle') {\n            // 圆角矩形\n            node = this.createRoundedRectangle()\n        } else if (shape === 'octagonalRectangle') {\n            // 八角矩形\n            node = this.createOctagonalRectangle()\n        } else if (shape === 'outerTriangularRectangle') {\n            // 外三角矩形\n            node = this.createOuterTriangularRectangle()\n        } else if (shape === 'innerTriangularRectangle') {\n            // 内三角矩形\n            node = this.createInnerTriangularRectangle()\n        } else if (shape === 'ellipse') {\n            // 椭圆\n            node = this.createEllipse()\n        } else if (shape === 'circle') {\n            // 圆\n            node = this.createCircle()\n        }\n        return node\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2022-09-04 09:08:54 \n     * @Desc: 创建菱形 \n     */\n    createDiamond() {\n        let { width, height } = this.node\n        let halfWidth = width / 2\n        let halfHeight = height / 2\n        let topX = halfWidth\n        let topY = 0\n        let rightX = width\n        let rightY = halfHeight\n        let bottomX = halfWidth\n        let bottomY = height\n        let leftX = 0\n        let leftY = halfHeight\n        return this.node.group.polygon(`\n            ${topX}, ${topY}\n            ${rightX}, ${rightY}\n            ${bottomX}, ${bottomY}\n            ${leftX}, ${leftY}\n        `)\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2022-09-03 16:14:12 \n     * @Desc: 创建平行四边形 \n     */\n    createParallelogram() {\n        let { paddingX } = this.node.getPaddingVale()\n        paddingX = paddingX || this.node.shapePadding.paddingX\n        let { width, height } = this.node\n        return this.node.group.polygon(`\n            ${paddingX}, ${0}\n            ${width}, ${0}\n            ${width - paddingX}, ${height}\n            ${0}, ${height}\n        `)\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2022-09-03 16:50:23 \n     * @Desc: 创建圆角矩形 \n     */\n    createRoundedRectangle() {\n        let { width, height } = this.node\n        let halfHeight = height / 2\n        return this.node.group.path(`\n            M${halfHeight},0\n            L${width - halfHeight},0\n            A${height / 2},${height / 2} 0 0,1 ${width - halfHeight},${height} \n            L${halfHeight},${height}\n            A${height / 2},${height / 2} 0 0,1 ${halfHeight},${0}\n        `)\n    }\n\n    /** \n     * javascript comment \n     * @Author: 王林 \n     * @Date: 2022-09-12 16:14:08 \n     * @Desc: 创建八角矩形 \n     */\n    createOctagonalRectangle() {\n        let w = 5\n        let { width, height } = this.node\n        return this.node.group.polygon(`\n            ${0}, ${w}\n            ${w}, ${0}\n            ${width - w}, ${0}\n            ${width}, ${w}\n            ${width}, ${height - w}\n            ${width - w}, ${height}\n            ${w}, ${height}\n            ${0}, ${height - w}\n        `)\n    }\n\n    /** \n     * javascript comment \n     * @Author: 王林 \n     * @Date: 2022-09-12 20:55:50 \n     * @Desc: 创建外三角矩形 \n     */\n    createOuterTriangularRectangle() {\n        let { paddingX } = this.node.getPaddingVale()\n        paddingX = paddingX || this.node.shapePadding.paddingX\n        let { width, height } = this.node\n        return this.node.group.polygon(`\n            ${paddingX}, ${0}\n            ${width - paddingX}, ${0}\n            ${width}, ${height / 2}\n            ${width - paddingX}, ${height}\n            ${paddingX}, ${height}\n            ${0}, ${height / 2}\n        `)\n    }\n\n    /** \n     * javascript comment \n     * @Author: 王林 \n     * @Date: 2022-09-12 20:59:37 \n     * @Desc: 创建内三角矩形 \n     */\n    createInnerTriangularRectangle() {\n        let { paddingX } = this.node.getPaddingVale()\n        paddingX = paddingX || this.node.shapePadding.paddingX\n        let { width, height } = this.node\n        return this.node.group.polygon(`\n            ${0}, ${0}\n            ${width}, ${0}\n            ${width - paddingX / 2}, ${height / 2}\n            ${width}, ${height}\n            ${0}, ${height}\n            ${paddingX / 2}, ${height / 2}\n        `)\n    }\n\n    /** \n     * javascript comment \n     * @Author: 王林 \n     * @Date: 2022-09-12 21:06:31 \n     * @Desc: 创建椭圆 \n     */\n    createEllipse() {\n        let { width, height } = this.node\n        let halfWidth = width / 2\n        let halfHeight = height / 2\n        return this.node.group.path(`\n            M${halfWidth},0\n            A${halfWidth},${halfHeight} 0 0,1 ${halfWidth},${height} \n            M${halfWidth},${height} \n            A${halfWidth},${halfHeight} 0 0,1 ${halfWidth},${0} \n        `)\n    }\n\n    /** \n     * javascript comment \n     * @Author: 王林 \n     * @Date: 2022-09-12 21:14:04 \n     * @Desc: 创建圆 \n     */\n    createCircle() {\n        let { width, height } = this.node\n        let halfWidth = width / 2\n        let halfHeight = height / 2\n        return this.node.group.path(`\n            M${halfWidth},0\n            A${halfWidth},${halfHeight} 0 0,1 ${halfWidth},${height} \n            M${halfWidth},${height} \n            A${halfWidth},${halfHeight} 0 0,1 ${halfWidth},${0} \n        `)\n    }\n}\n\n// 形状列表\nexport const shapeList = ['rectangle', 'diamond', 'parallelogram', 'roundedRectangle', 'octagonalRectangle', 'outerTriangularRectangle', 'innerTriangularRectangle', 'ellipse', 'circle']"],"mappings":"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"},"metadata":{},"sourceType":"module"}