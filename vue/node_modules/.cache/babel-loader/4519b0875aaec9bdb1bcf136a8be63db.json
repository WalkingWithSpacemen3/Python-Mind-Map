{"ast":null,"code":"import { bfsWalk, throttle } from 'simple-mind-map/src/utils';\nimport Base from 'simple-mind-map/src/layouts/Base';\n/** \n * javascript comment \n * @Author: 王林25 \n * @Date: 2021-11-23 17:38:55 \n * @Desc: 节点拖动类 \n */\n\nclass Drag extends Base {\n  /** \n   * @Author: 王林 \n   * @Date: 2021-07-10 22:35:16 \n   * @Desc: 构造函数 \n   */\n  constructor({\n    mindMap\n  }) {\n    super(mindMap.renderer);\n    this.mindMap = mindMap;\n    this.reset();\n    this.bindEvent();\n  }\n  /** \n   * javascript comment \n   * @Author: 王林25 \n   * @Date: 2021-11-23 19:33:56 \n   * @Desc: 复位 \n   */\n\n\n  reset() {\n    // 当前拖拽节点\n    this.node = null; // 当前重叠节点\n\n    this.overlapNode = null; // 当前上一个同级节点\n\n    this.prevNode = null; // 当前下一个同级节点\n\n    this.nextNode = null; // 画布的变换数据\n\n    this.drawTransform = null; // 克隆节点\n\n    this.clone = null; // 连接线\n\n    this.line = null; // 同级位置占位符\n\n    this.placeholder = null; // 鼠标按下位置和节点左上角的偏移量\n\n    this.offsetX = 0;\n    this.offsetY = 0; // 克隆节点左上角的坐标\n\n    this.cloneNodeLeft = 0;\n    this.cloneNodeTop = 0; // 当前鼠标是否按下\n\n    this.isMousedown = false; // 拖拽的鼠标位置变量\n\n    this.mouseDownX = 0;\n    this.mouseDownY = 0;\n    this.mouseMoveX = 0;\n    this.mouseMoveY = 0;\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-07-10 22:36:36 \n   * @Desc: 绑定事件 \n   */\n\n\n  bindEvent() {\n    this.checkOverlapNode = throttle(this.checkOverlapNode, 300, this);\n    this.mindMap.on('node_mousedown', (node, e) => {\n      if (this.mindMap.opt.readonly || node.isGeneralization) {\n        return;\n      }\n\n      if (e.which !== 1 || node.isRoot) {\n        return;\n      }\n\n      e.preventDefault(); // 计算鼠标按下的位置距离节点左上角的距离\n\n      this.drawTransform = this.mindMap.draw.transform();\n      let {\n        scaleX,\n        scaleY,\n        translateX,\n        translateY\n      } = this.drawTransform;\n      this.offsetX = e.clientX - (node.left * scaleX + translateX);\n      this.offsetY = e.clientY - (node.top * scaleY + translateY); // \n\n      this.node = node;\n      this.isMousedown = true;\n      let {\n        x,\n        y\n      } = this.mindMap.toPos(e.clientX, e.clientY);\n      this.mouseDownX = x;\n      this.mouseDownY = y;\n    });\n    this.mindMap.on('mousemove', e => {\n      if (this.mindMap.opt.readonly) {\n        return;\n      }\n\n      if (!this.isMousedown) {\n        return;\n      }\n\n      e.preventDefault();\n      let {\n        x,\n        y\n      } = this.mindMap.toPos(e.clientX, e.clientY);\n      this.mouseMoveX = x;\n      this.mouseMoveY = y;\n\n      if (Math.abs(x - this.mouseDownX) <= 10 && Math.abs(y - this.mouseDownY) <= 10 && !this.node.isDrag) {\n        return;\n      }\n\n      this.mindMap.renderer.clearAllActive();\n      this.onMove(x, y);\n    });\n    this.onMouseup = this.onMouseup.bind(this);\n    this.mindMap.on('node_mouseup', this.onMouseup);\n    this.mindMap.on('mouseup', this.onMouseup);\n  }\n  /** \n   * javascript comment \n   * @Author: 王林25 \n   * @Date: 2021-11-23 19:38:02 \n   * @Desc: 鼠标松开事件 \n   */\n\n\n  onMouseup(e) {\n    if (!this.isMousedown) {\n      return;\n    }\n\n    this.isMousedown = false;\n    let _nodeIsDrag = this.node.isDrag;\n    this.node.isDrag = false;\n    this.node.show();\n    this.removeCloneNode(); // 存在重叠子节点，则移动作为其子节点\n\n    if (this.overlapNode) {\n      this.mindMap.renderer.setNodeActive(this.overlapNode, false);\n      this.mindMap.execCommand('MOVE_NODE_TO', this.node, this.overlapNode);\n    } else if (this.prevNode) {\n      // 存在前一个相邻节点，作为其下一个兄弟节点\n      this.mindMap.renderer.setNodeActive(this.prevNode, false);\n      this.mindMap.execCommand('INSERT_AFTER', this.node, this.prevNode);\n    } else if (this.nextNode) {\n      // 存在下一个相邻节点，作为其前一个兄弟节点\n      this.mindMap.renderer.setNodeActive(this.nextNode, false);\n      this.mindMap.execCommand('INSERT_BEFORE', this.node, this.nextNode);\n    } else if (_nodeIsDrag) {\n      // 自定义位置\n      let {\n        x,\n        y\n      } = this.mindMap.toPos(e.clientX - this.offsetX, e.clientY - this.offsetY);\n      let {\n        scaleX,\n        scaleY,\n        translateX,\n        translateY\n      } = this.drawTransform;\n      x = (x - translateX) / scaleX;\n      y = (y - translateY) / scaleY;\n      this.node.left = x;\n      this.node.top = y;\n      this.node.customLeft = x;\n      this.node.customTop = y;\n      this.mindMap.execCommand('SET_NODE_CUSTOM_POSITION', this.node, x, y);\n      this.mindMap.render();\n    }\n\n    this.reset();\n  }\n  /** \n   * javascript comment \n   * @Author: 王林25 \n   * @Date: 2021-11-23 19:34:53 \n   * @Desc: 创建克隆节点 \n   */\n\n\n  createCloneNode() {\n    if (!this.clone) {\n      // 节点\n      this.clone = this.node.group.clone();\n      this.clone.opacity(0.5);\n      this.clone.css('z-index', 99999);\n      this.node.isDrag = true;\n      this.node.hide(); // 连接线\n\n      this.line = this.draw.path();\n      this.line.opacity(0.5);\n      this.node.style.line(this.line); // 同级位置占位符\n\n      this.placeholder = this.draw.rect().fill({\n        color: this.node.style.merge('lineColor', true)\n      });\n      this.mindMap.draw.add(this.clone);\n    }\n  }\n  /** \n   * javascript comment \n   * @Author: 王林25 \n   * @Date: 2021-11-23 19:35:16 \n   * @Desc: 移除克隆节点 \n   */\n\n\n  removeCloneNode() {\n    if (!this.clone) {\n      return;\n    }\n\n    this.clone.remove();\n    this.line.remove();\n    this.placeholder.remove();\n  }\n  /** \n   * javascript comment \n   * @Author: 王林25 \n   * @Date: 2021-11-23 18:53:47 \n   * @Desc: 拖动中 \n   */\n\n\n  onMove(x, y) {\n    if (!this.isMousedown) {\n      return;\n    }\n\n    this.createCloneNode();\n    let {\n      scaleX,\n      scaleY,\n      translateX,\n      translateY\n    } = this.drawTransform;\n    this.cloneNodeLeft = x - this.offsetX;\n    this.cloneNodeTop = y - this.offsetY;\n    x = (this.cloneNodeLeft - translateX) / scaleX;\n    y = (this.cloneNodeTop - translateY) / scaleY;\n    let t = this.clone.transform();\n    this.clone.translate(x - t.translateX, y - t.translateY); // 连接线\n\n    let parent = this.node.parent;\n    this.line.plot(this.quadraticCurvePath(parent.left + parent.width / 2, parent.top + parent.height / 2, x + this.node.width / 2, y + this.node.height / 2));\n    this.checkOverlapNode();\n  }\n  /** \n   * @Author: 王林 \n   * @Date: 2021-07-11 10:20:43 \n   * @Desc: 检测重叠节点 \n   */\n\n\n  checkOverlapNode() {\n    if (!this.drawTransform) {\n      return;\n    }\n\n    let {\n      scaleX,\n      scaleY,\n      translateX,\n      translateY\n    } = this.drawTransform;\n    let checkRight = this.cloneNodeLeft + this.node.width * scaleX;\n    let checkBottom = this.cloneNodeTop + this.node.height * scaleX;\n    this.overlapNode = null;\n    this.prevNode = null;\n    this.nextNode = null;\n    this.placeholder.size(0, 0);\n    bfsWalk(this.mindMap.renderer.root, node => {\n      if (node.nodeData.data.isActive) {\n        this.mindMap.renderer.setNodeActive(node, false);\n      }\n\n      if (node === this.node || this.node.isParent(node)) {\n        return;\n      }\n\n      if (this.overlapNode || this.prevNode && this.nextNode) {\n        return;\n      }\n\n      let {\n        left,\n        top,\n        width,\n        height\n      } = node;\n      let _left = left;\n      let _top = top;\n\n      let _bottom = top + height;\n\n      let right = (left + width) * scaleX + translateX;\n      let bottom = (top + height) * scaleY + translateY;\n      left = left * scaleX + translateX;\n      top = top * scaleY + translateY; // 检测是否重叠\n\n      if (!this.overlapNode) {\n        if (left <= checkRight && right >= this.cloneNodeLeft && top <= checkBottom && bottom >= this.cloneNodeTop) {\n          this.overlapNode = node;\n        }\n      } // 检测兄弟节点位置\n\n\n      if (!this.prevNode && !this.nextNode && this.node.isBrother(node)) {\n        if (left <= checkRight && right >= this.cloneNodeLeft) {\n          if (this.cloneNodeTop > bottom && this.cloneNodeTop <= bottom + 10) {\n            this.prevNode = node;\n            this.placeholder.size(node.width, 10).move(_left, _bottom);\n          } else if (checkBottom < top && checkBottom >= top - 10) {\n            this.nextNode = node;\n            this.placeholder.size(node.width, 10).move(_left, _top - 10);\n          }\n        }\n      }\n    });\n\n    if (this.overlapNode) {\n      this.mindMap.renderer.setNodeActive(this.overlapNode, true);\n    }\n  }\n\n}\n\nexport default Drag;","map":{"version":3,"names":["bfsWalk","throttle","Base","Drag","constructor","mindMap","renderer","reset","bindEvent","node","overlapNode","prevNode","nextNode","drawTransform","clone","line","placeholder","offsetX","offsetY","cloneNodeLeft","cloneNodeTop","isMousedown","mouseDownX","mouseDownY","mouseMoveX","mouseMoveY","checkOverlapNode","on","e","opt","readonly","isGeneralization","which","isRoot","preventDefault","draw","transform","scaleX","scaleY","translateX","translateY","clientX","left","clientY","top","x","y","toPos","Math","abs","isDrag","clearAllActive","onMove","onMouseup","bind","_nodeIsDrag","show","removeCloneNode","setNodeActive","execCommand","customLeft","customTop","render","createCloneNode","group","opacity","css","hide","path","style","rect","fill","color","merge","add","remove","t","translate","parent","plot","quadraticCurvePath","width","height","checkRight","checkBottom","size","root","nodeData","data","isActive","isParent","_left","_top","_bottom","right","bottom","isBrother","move"],"sources":["C:/Users/13007/Documents/GinTest/vue/node_modules/simple-mind-map/src/Drag.js"],"sourcesContent":["import {\n    bfsWalk,\n    throttle\n} from 'simple-mind-map/src/utils'\nimport Base from 'simple-mind-map/src/layouts/Base'\n\n/** \n * javascript comment \n * @Author: 王林25 \n * @Date: 2021-11-23 17:38:55 \n * @Desc: 节点拖动类 \n */\nclass Drag extends Base {\n    /** \n     * @Author: 王林 \n     * @Date: 2021-07-10 22:35:16 \n     * @Desc: 构造函数 \n     */\n    constructor({\n        mindMap\n    }) {\n        super(mindMap.renderer)\n        this.mindMap = mindMap\n        this.reset()\n        this.bindEvent()\n    }\n\n    /** \n     * javascript comment \n     * @Author: 王林25 \n     * @Date: 2021-11-23 19:33:56 \n     * @Desc: 复位 \n     */\n    reset() {\n        // 当前拖拽节点\n        this.node = null\n        // 当前重叠节点\n        this.overlapNode = null\n        // 当前上一个同级节点\n        this.prevNode = null\n        // 当前下一个同级节点\n        this.nextNode = null\n        // 画布的变换数据\n        this.drawTransform = null\n        // 克隆节点\n        this.clone = null\n        // 连接线\n        this.line = null\n        // 同级位置占位符\n        this.placeholder = null\n        // 鼠标按下位置和节点左上角的偏移量\n        this.offsetX = 0\n        this.offsetY = 0\n        // 克隆节点左上角的坐标\n        this.cloneNodeLeft = 0\n        this.cloneNodeTop = 0\n        // 当前鼠标是否按下\n        this.isMousedown = false\n        // 拖拽的鼠标位置变量\n        this.mouseDownX = 0\n        this.mouseDownY = 0\n        this.mouseMoveX = 0\n        this.mouseMoveY = 0\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-07-10 22:36:36 \n     * @Desc: 绑定事件 \n     */\n    bindEvent() {\n        this.checkOverlapNode = throttle(this.checkOverlapNode, 300, this)\n        this.mindMap.on('node_mousedown', (node, e) => {\n            if (this.mindMap.opt.readonly || node.isGeneralization) {\n                return\n            }\n            if (e.which !== 1 || node.isRoot) {\n                return\n            }\n            e.preventDefault()\n            // 计算鼠标按下的位置距离节点左上角的距离\n            this.drawTransform = this.mindMap.draw.transform()\n            let {\n                scaleX,\n                scaleY,\n                translateX,\n                translateY\n            } = this.drawTransform\n            this.offsetX = e.clientX - (node.left * scaleX + translateX)\n            this.offsetY = e.clientY - (node.top * scaleY + translateY)\n            // \n            this.node = node\n            this.isMousedown = true\n            let {\n                x,\n                y\n            } = this.mindMap.toPos(e.clientX, e.clientY)\n            this.mouseDownX = x\n            this.mouseDownY = y\n        })\n        this.mindMap.on('mousemove', (e) => {\n            if (this.mindMap.opt.readonly) {\n                return\n            }\n            if (!this.isMousedown) {\n                return\n            }\n            e.preventDefault()\n            let {\n                x,\n                y\n            } = this.mindMap.toPos(e.clientX, e.clientY)\n            this.mouseMoveX = x\n            this.mouseMoveY = y\n            if ((Math.abs(x - this.mouseDownX) <= 10 && Math.abs(y - this.mouseDownY) <= 10) && !this.node.isDrag) {\n                return\n            }\n            this.mindMap.renderer.clearAllActive()\n            this.onMove(x, y)\n        })\n        this.onMouseup = this.onMouseup.bind(this)\n        this.mindMap.on('node_mouseup', this.onMouseup)\n        this.mindMap.on('mouseup', this.onMouseup)\n    }\n\n    /** \n     * javascript comment \n     * @Author: 王林25 \n     * @Date: 2021-11-23 19:38:02 \n     * @Desc: 鼠标松开事件 \n     */\n    onMouseup(e) {\n        if (!this.isMousedown) {\n            return;\n        }\n        this.isMousedown = false\n        let _nodeIsDrag = this.node.isDrag\n        this.node.isDrag = false\n        this.node.show()\n        this.removeCloneNode()\n        // 存在重叠子节点，则移动作为其子节点\n        if (this.overlapNode) {\n            this.mindMap.renderer.setNodeActive(this.overlapNode, false)\n            this.mindMap.execCommand('MOVE_NODE_TO', this.node, this.overlapNode)\n        } else if (this.prevNode) { // 存在前一个相邻节点，作为其下一个兄弟节点\n            this.mindMap.renderer.setNodeActive(this.prevNode, false)\n            this.mindMap.execCommand('INSERT_AFTER', this.node, this.prevNode)\n        } else if (this.nextNode) { // 存在下一个相邻节点，作为其前一个兄弟节点\n            this.mindMap.renderer.setNodeActive(this.nextNode, false)\n            this.mindMap.execCommand('INSERT_BEFORE', this.node, this.nextNode)\n        } else if (_nodeIsDrag) {\n            // 自定义位置\n            let {\n                x,\n                y\n            } = this.mindMap.toPos(e.clientX - this.offsetX, e.clientY - this.offsetY)\n            let {\n                scaleX,\n                scaleY,\n                translateX,\n                translateY\n            } = this.drawTransform\n            x = (x - translateX) / scaleX\n            y = (y - translateY) / scaleY\n            this.node.left = x\n            this.node.top = y\n            this.node.customLeft = x\n            this.node.customTop = y\n            this.mindMap.execCommand('SET_NODE_CUSTOM_POSITION', this.node, x, y)\n            this.mindMap.render()\n        }\n        this.reset()\n    }\n\n    /** \n     * javascript comment \n     * @Author: 王林25 \n     * @Date: 2021-11-23 19:34:53 \n     * @Desc: 创建克隆节点 \n     */\n    createCloneNode() {\n        if (!this.clone) {\n            // 节点\n            this.clone = this.node.group.clone()\n            this.clone.opacity(0.5)\n            this.clone.css('z-index', 99999)\n            this.node.isDrag = true\n            this.node.hide()\n            // 连接线\n            this.line = this.draw.path()\n            this.line.opacity(0.5)\n            this.node.style.line(this.line)\n            // 同级位置占位符\n            this.placeholder = this.draw.rect().fill({\n                color: this.node.style.merge('lineColor', true)\n            })\n            this.mindMap.draw.add(this.clone)\n        }\n    }\n\n    /** \n     * javascript comment \n     * @Author: 王林25 \n     * @Date: 2021-11-23 19:35:16 \n     * @Desc: 移除克隆节点 \n     */\n    removeCloneNode() {\n        if (!this.clone) {\n            return\n        }\n        this.clone.remove()\n        this.line.remove()\n        this.placeholder.remove()\n    }\n\n    /** \n     * javascript comment \n     * @Author: 王林25 \n     * @Date: 2021-11-23 18:53:47 \n     * @Desc: 拖动中 \n     */\n    onMove(x, y) {\n        if (!this.isMousedown) {\n            return;\n        }\n        this.createCloneNode()\n        let {\n            scaleX,\n            scaleY,\n            translateX,\n            translateY\n        } = this.drawTransform\n        this.cloneNodeLeft = x - this.offsetX\n        this.cloneNodeTop = y - this.offsetY\n        x = (this.cloneNodeLeft - translateX) / scaleX\n        y = (this.cloneNodeTop - translateY) / scaleY\n        let t = this.clone.transform()\n        this.clone.translate(x - t.translateX, y - t.translateY)\n        // 连接线\n        let parent = this.node.parent\n        this.line.plot(this.quadraticCurvePath(parent.left + parent.width / 2, parent.top + parent.height / 2, x + this.node.width / 2, y + this.node.height / 2))\n        this.checkOverlapNode()\n    }\n\n    /** \n     * @Author: 王林 \n     * @Date: 2021-07-11 10:20:43 \n     * @Desc: 检测重叠节点 \n     */\n    checkOverlapNode() {\n        if (!this.drawTransform) {\n            return\n        }\n        let {\n            scaleX,\n            scaleY,\n            translateX,\n            translateY\n        } = this.drawTransform\n        let checkRight = this.cloneNodeLeft + this.node.width * scaleX\n        let checkBottom = this.cloneNodeTop + this.node.height * scaleX\n        this.overlapNode = null\n        this.prevNode = null\n        this.nextNode = null\n        this.placeholder.size(0, 0)\n        bfsWalk(this.mindMap.renderer.root, (node) => {\n            if (node.nodeData.data.isActive) {\n                this.mindMap.renderer.setNodeActive(node, false)\n            }\n            if (node === this.node || this.node.isParent(node)) {\n                return\n            }\n            if (this.overlapNode || this.prevNode && this.nextNode) {\n                return\n            }\n            let {\n                left,\n                top,\n                width,\n                height\n            } = node\n            let _left = left\n            let _top = top\n            let _bottom = top + height\n            let right = (left + width) * scaleX + translateX\n            let bottom = (top + height) * scaleY + translateY\n            left = left * scaleX + translateX\n            top = top * scaleY + translateY\n            // 检测是否重叠\n            if (!this.overlapNode) {\n                if (\n                    left <= checkRight && right >= this.cloneNodeLeft &&\n                    top <= checkBottom && bottom >= this.cloneNodeTop\n                ) {\n                    this.overlapNode = node\n                }\n            }\n            // 检测兄弟节点位置\n            if (!this.prevNode && !this.nextNode && this.node.isBrother(node)) {\n                if (left <= checkRight && right >= this.cloneNodeLeft) {\n                    if (this.cloneNodeTop > bottom && this.cloneNodeTop <= bottom + 10) {\n                        this.prevNode = node\n                        this.placeholder.size(node.width, 10).move(_left, _bottom)\n                    } else if (checkBottom < top && checkBottom >= top - 10) {\n                        this.nextNode = node\n                        this.placeholder.size(node.width, 10).move(_left, _top - 10)\n                    }\n                }\n            }\n        })\n        if (this.overlapNode) {\n            this.mindMap.renderer.setNodeActive(this.overlapNode, true)\n        }\n    }\n}\n\nexport default Drag"],"mappings":"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"},"metadata":{},"sourceType":"module"}