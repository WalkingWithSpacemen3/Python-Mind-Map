{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport JSZip from \"jszip\";\nimport xmlConvert from \"xml-js\";\n/**\n * javascript comment\n * @Author: 王林25\n * @Date: 2022-09-21 14:07:47\n * @Desc: 解析.xmind文件\n */\n\nconst parseXmindFile = file => {\n  return new Promise((resolve, reject) => {\n    JSZip.loadAsync(file).then(async zip => {\n      try {\n        let content = \"\";\n\n        if (zip.files[\"content.json\"]) {\n          let json = await zip.files[\"content.json\"].async(\"string\");\n          content = transformXmind(json);\n        } else if (zip.files[\"content.xml\"]) {\n          let xml = await zip.files[\"content.xml\"].async(\"string\");\n          let json = xmlConvert.xml2json(xml);\n          content = transformOldXmind(json);\n        }\n\n        if (content) {\n          resolve(content);\n        } else {\n          reject(new Error(\"解析失败\"));\n        }\n      } catch (error) {\n        reject(error);\n      }\n    }, e => {\n      reject(e);\n    });\n  });\n};\n/**\n * javascript comment\n * @Author: 王林25\n * @Date: 2022-09-21 18:57:25\n * @Desc: 转换xmind数据\n */\n\n\nconst transformXmind = content => {\n  let data = JSON.parse(content)[0];\n  let nodeTree = data.rootTopic;\n  let newTree = {};\n\n  let walk = (node, newNode) => {\n    newNode.data = {\n      // 节点内容\n      text: node.title\n    }; // 节点备注\n\n    if (node.notes) {\n      newNode.data.note = (node.notes.realHTML || node.notes.plain).content;\n    } // 超链接\n\n\n    if (node.href && /^https?:\\/\\//.test(node.href)) {\n      newNode.data.hyperlink = node.href;\n    } // 标签\n\n\n    if (node.labels && node.labels.length > 0) {\n      newNode.data.tag = node.labels;\n    } // 子节点\n\n\n    newNode.children = [];\n\n    if (node.children && node.children.attached && node.children.attached.length > 0) {\n      node.children.attached.forEach(item => {\n        let newChild = {};\n        newNode.children.push(newChild);\n        walk(item, newChild);\n      });\n    }\n  };\n\n  walk(nodeTree, newTree);\n  return newTree;\n};\n/**\n * javascript comment\n * @Author: 王林25\n * @Date: 2022-09-23 15:51:51\n * @Desc: 转换旧版xmind数据，xmind8\n */\n\n\nconst transformOldXmind = content => {\n  let data = JSON.parse(content);\n  let elements = data.elements;\n  let root = null;\n\n  let getRoot = arr => {\n    for (let i = 0; i < arr.length; i++) {\n      if (!root && arr[i].name === \"topic\") {\n        root = arr[i];\n        return;\n      }\n    }\n\n    arr.forEach(item => {\n      getRoot(item.elements);\n    });\n  };\n\n  getRoot(elements);\n  let newTree = {};\n\n  let getItemByName = (arr, name) => {\n    return arr.find(item => {\n      return item.name === name;\n    });\n  };\n\n  let walk = (node, newNode) => {\n    let nodeElements = node.elements;\n    newNode.data = {\n      // 节点内容\n      text: getItemByName(nodeElements, \"title\").elements[0].text\n    };\n\n    try {\n      // 节点备注\n      let notesElement = getItemByName(nodeElements, \"notes\");\n\n      if (notesElement) {\n        newNode.data.note = notesElement.elements[0].elements[0].elements[0].text;\n      }\n    } catch (error) {}\n\n    try {\n      // 超链接\n      if (node.attributes && node.attributes[\"xlink:href\"] && /^https?:\\/\\//.test(node.attributes[\"xlink:href\"])) {\n        newNode.data.hyperlink = node.attributes[\"xlink:href\"];\n      }\n    } catch (error) {}\n\n    try {\n      // 标签\n      let labelsElement = getItemByName(nodeElements, \"labels\");\n\n      if (labelsElement) {\n        newNode.data.tag = labelsElement.elements.map(item => {\n          return item.elements[0].text;\n        });\n      }\n    } catch (error) {} // 子节点\n\n\n    newNode.children = [];\n\n    let _children = getItemByName(nodeElements, \"children\");\n\n    if (_children && _children.elements && _children.elements.length > 0) {\n      _children.elements.forEach(item => {\n        if (item.name === \"topics\") {\n          item.elements.forEach(item2 => {\n            let newChild = {};\n            newNode.children.push(newChild);\n            walk(item2, newChild);\n          });\n        } else {\n          let newChild = {};\n          newNode.children.push(newChild);\n          walk(item, newChild);\n        }\n      });\n    }\n  };\n\n  walk(root, newTree);\n  return newTree;\n};\n\nexport default {\n  parseXmindFile,\n  transformXmind,\n  transformOldXmind\n};","map":{"version":3,"names":["JSZip","xmlConvert","parseXmindFile","file","Promise","resolve","reject","loadAsync","then","zip","content","files","json","async","transformXmind","xml","xml2json","transformOldXmind","Error","error","e","data","JSON","parse","nodeTree","rootTopic","newTree","walk","node","newNode","text","title","notes","note","realHTML","plain","href","test","hyperlink","labels","length","tag","children","attached","forEach","item","newChild","push","elements","root","getRoot","arr","i","name","getItemByName","find","nodeElements","notesElement","attributes","labelsElement","map","_children","item2"],"sources":["D:/新建文件夹/git项目/GinTest/vue/node_modules/simple-mind-map/src/parse/xmind.js"],"sourcesContent":["import JSZip from \"jszip\";\nimport xmlConvert from \"xml-js\";\n\n/**\n * javascript comment\n * @Author: 王林25\n * @Date: 2022-09-21 14:07:47\n * @Desc: 解析.xmind文件\n */\nconst parseXmindFile = (file) => {\n  return new Promise((resolve, reject) => {\n    JSZip.loadAsync(file).then(\n      async (zip) => {\n        try {\n          let content = \"\";\n          if (zip.files[\"content.json\"]) {\n            let json = await zip.files[\"content.json\"].async(\"string\");\n            content = transformXmind(json);\n          } else if (zip.files[\"content.xml\"]) {\n            let xml = await zip.files[\"content.xml\"].async(\"string\");\n            let json = xmlConvert.xml2json(xml);\n            content = transformOldXmind(json);\n          }\n          if (content) {\n            resolve(content);\n          } else {\n            reject(new Error(\"解析失败\"));\n          }\n        } catch (error) {\n          reject(error);\n        }\n      },\n      (e) => {\n        reject(e);\n      }\n    );\n  });\n};\n\n/**\n * javascript comment\n * @Author: 王林25\n * @Date: 2022-09-21 18:57:25\n * @Desc: 转换xmind数据\n */\nconst transformXmind = (content) => {\n  let data = JSON.parse(content)[0];\n  let nodeTree = data.rootTopic;\n  let newTree = {};\n  let walk = (node, newNode) => {\n    newNode.data = {\n      // 节点内容\n      text: node.title,\n    };\n    // 节点备注\n    if (node.notes) {\n      newNode.data.note = (node.notes.realHTML || node.notes.plain).content;\n    }\n    // 超链接\n    if (node.href && /^https?:\\/\\//.test(node.href)) {\n      newNode.data.hyperlink = node.href;\n    }\n    // 标签\n    if (node.labels && node.labels.length > 0) {\n      newNode.data.tag = node.labels;\n    }\n    // 子节点\n    newNode.children = [];\n    if (\n      node.children &&\n      node.children.attached &&\n      node.children.attached.length > 0\n    ) {\n      node.children.attached.forEach((item) => {\n        let newChild = {};\n        newNode.children.push(newChild);\n        walk(item, newChild);\n      });\n    }\n  };\n  walk(nodeTree, newTree);\n  return newTree;\n};\n\n/**\n * javascript comment\n * @Author: 王林25\n * @Date: 2022-09-23 15:51:51\n * @Desc: 转换旧版xmind数据，xmind8\n */\nconst transformOldXmind = (content) => {\n  let data = JSON.parse(content);\n  let elements = data.elements;\n  let root = null;\n  let getRoot = (arr) => {\n    for (let i = 0; i < arr.length; i++) {\n      if (!root && arr[i].name === \"topic\") {\n        root = arr[i];\n        return;\n      }\n    }\n    arr.forEach((item) => {\n      getRoot(item.elements);\n    });\n  };\n  getRoot(elements);\n  let newTree = {};\n  let getItemByName = (arr, name) => {\n    return arr.find((item) => {\n      return item.name === name;\n    });\n  };\n  let walk = (node, newNode) => {\n    let nodeElements = node.elements;\n    newNode.data = {\n      // 节点内容\n      text: getItemByName(nodeElements, \"title\").elements[0].text,\n    };\n    try {\n      // 节点备注\n      let notesElement = getItemByName(nodeElements, \"notes\");\n      if (notesElement) {\n        newNode.data.note =\n          notesElement.elements[0].elements[0].elements[0].text;\n      }\n    } catch (error) {}\n    try {\n      // 超链接\n      if (\n        node.attributes &&\n        node.attributes[\"xlink:href\"] &&\n        /^https?:\\/\\//.test(node.attributes[\"xlink:href\"])\n      ) {\n        newNode.data.hyperlink = node.attributes[\"xlink:href\"];\n      }\n    } catch (error) {}\n    try {\n      // 标签\n      let labelsElement = getItemByName(nodeElements, \"labels\");\n      if (labelsElement) {\n        newNode.data.tag = labelsElement.elements.map((item) => {\n          return item.elements[0].text;\n        });\n      }\n    } catch (error) {}\n    // 子节点\n    newNode.children = [];\n    let _children = getItemByName(nodeElements, \"children\");\n    if (_children && _children.elements && _children.elements.length > 0) {\n      _children.elements.forEach((item) => {\n        if (item.name === \"topics\") {\n          item.elements.forEach((item2) => {\n            let newChild = {};\n            newNode.children.push(newChild);\n            walk(item2, newChild);\n          });\n        } else {\n          let newChild = {};\n          newNode.children.push(newChild);\n          walk(item, newChild);\n        }\n      });\n    }\n  };\n  walk(root, newTree);\n  return newTree;\n};\n\nexport default {\n  parseXmindFile,\n  transformXmind,\n  transformOldXmind,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}